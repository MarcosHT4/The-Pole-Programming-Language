/*
 * generated by Xtext 2.25.0
 */
grammar InternalPole;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.upb.lp.isc.services.PoleGrammarAccess;

}
@parser::members {
	private PoleGrammarAccess grammarAccess;

	public void setGrammarAccess(PoleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePrograma
entryRulePrograma
:
{ before(grammarAccess.getProgramaRule()); }
	 rulePrograma
{ after(grammarAccess.getProgramaRule()); } 
	 EOF 
;

// Rule Programa
rulePrograma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramaAccess().getGroup()); }
		(rule__Programa__Group__0)
		{ after(grammarAccess.getProgramaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEjecucion
entryRuleEjecucion
:
{ before(grammarAccess.getEjecucionRule()); }
	 ruleEjecucion
{ after(grammarAccess.getEjecucionRule()); } 
	 EOF 
;

// Rule Ejecucion
ruleEjecucion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getEjecucionAccess().getInstrAssignment()); }
			(rule__Ejecucion__InstrAssignment)
			{ after(grammarAccess.getEjecucionAccess().getInstrAssignment()); }
		)
		(
			{ before(grammarAccess.getEjecucionAccess().getInstrAssignment()); }
			(rule__Ejecucion__InstrAssignment)*
			{ after(grammarAccess.getEjecucionAccess().getInstrAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruccion
entryRuleInstruccion
:
{ before(grammarAccess.getInstruccionRule()); }
	 ruleInstruccion
{ after(grammarAccess.getInstruccionRule()); } 
	 EOF 
;

// Rule Instruccion
ruleInstruccion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstruccionAccess().getAlternatives()); }
		(rule__Instruccion__Alternatives)
		{ after(grammarAccess.getInstruccionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlamadoMetodo
entryRuleLlamadoMetodo
:
{ before(grammarAccess.getLlamadoMetodoRule()); }
	 ruleLlamadoMetodo
{ after(grammarAccess.getLlamadoMetodoRule()); } 
	 EOF 
;

// Rule LlamadoMetodo
ruleLlamadoMetodo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getGroup()); }
		(rule__LlamadoMetodo__Group__0)
		{ after(grammarAccess.getLlamadoMetodoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunciones
entryRuleFunciones
:
{ before(grammarAccess.getFuncionesRule()); }
	 ruleFunciones
{ after(grammarAccess.getFuncionesRule()); } 
	 EOF 
;

// Rule Funciones
ruleFunciones 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncionesAccess().getGroup()); }
		(rule__Funciones__Group__0)
		{ after(grammarAccess.getFuncionesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImprimir
entryRuleImprimir
:
{ before(grammarAccess.getImprimirRule()); }
	 ruleImprimir
{ after(grammarAccess.getImprimirRule()); } 
	 EOF 
;

// Rule Imprimir
ruleImprimir 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImprimirAccess().getGroup()); }
		(rule__Imprimir__Group__0)
		{ after(grammarAccess.getImprimirAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImprimirSinSaltoDeLinea
entryRuleImprimirSinSaltoDeLinea
:
{ before(grammarAccess.getImprimirSinSaltoDeLineaRule()); }
	 ruleImprimirSinSaltoDeLinea
{ after(grammarAccess.getImprimirSinSaltoDeLineaRule()); } 
	 EOF 
;

// Rule ImprimirSinSaltoDeLinea
ruleImprimirSinSaltoDeLinea 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getGroup()); }
		(rule__ImprimirSinSaltoDeLinea__Group__0)
		{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondicional
entryRuleCondicional
:
{ before(grammarAccess.getCondicionalRule()); }
	 ruleCondicional
{ after(grammarAccess.getCondicionalRule()); } 
	 EOF 
;

// Rule Condicional
ruleCondicional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondicionalAccess().getGroup()); }
		(rule__Condicional__Group__0)
		{ after(grammarAccess.getCondicionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondicionalElseIf
entryRuleCondicionalElseIf
:
{ before(grammarAccess.getCondicionalElseIfRule()); }
	 ruleCondicionalElseIf
{ after(grammarAccess.getCondicionalElseIfRule()); } 
	 EOF 
;

// Rule CondicionalElseIf
ruleCondicionalElseIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondicionalElseIfAccess().getGroup()); }
		(rule__CondicionalElseIf__Group__0)
		{ after(grammarAccess.getCondicionalElseIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitch
entryRuleSwitch
:
{ before(grammarAccess.getSwitchRule()); }
	 ruleSwitch
{ after(grammarAccess.getSwitchRule()); } 
	 EOF 
;

// Rule Switch
ruleSwitch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchAccess().getGroup()); }
		(rule__Switch__Group__0)
		{ after(grammarAccess.getSwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseSwitch
entryRuleCaseSwitch
:
{ before(grammarAccess.getCaseSwitchRule()); }
	 ruleCaseSwitch
{ after(grammarAccess.getCaseSwitchRule()); } 
	 EOF 
;

// Rule CaseSwitch
ruleCaseSwitch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseSwitchAccess().getGroup()); }
		(rule__CaseSwitch__Group__0)
		{ after(grammarAccess.getCaseSwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoWhile
entryRuleDoWhile
:
{ before(grammarAccess.getDoWhileRule()); }
	 ruleDoWhile
{ after(grammarAccess.getDoWhileRule()); } 
	 EOF 
;

// Rule DoWhile
ruleDoWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoWhileAccess().getGroup()); }
		(rule__DoWhile__Group__0)
		{ after(grammarAccess.getDoWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclVariables
entryRuleDeclVariables
:
{ before(grammarAccess.getDeclVariablesRule()); }
	 ruleDeclVariables
{ after(grammarAccess.getDeclVariablesRule()); } 
	 EOF 
;

// Rule DeclVariables
ruleDeclVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclVariablesAccess().getGroup()); }
		(rule__DeclVariables__Group__0)
		{ after(grammarAccess.getDeclVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclVariables2
entryRuleDeclVariables2
:
{ before(grammarAccess.getDeclVariables2Rule()); }
	 ruleDeclVariables2
{ after(grammarAccess.getDeclVariables2Rule()); } 
	 EOF 
;

// Rule DeclVariables2
ruleDeclVariables2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclVariables2Access().getGroup()); }
		(rule__DeclVariables2__Group__0)
		{ after(grammarAccess.getDeclVariables2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsignacionVariable
entryRuleAsignacionVariable
:
{ before(grammarAccess.getAsignacionVariableRule()); }
	 ruleAsignacionVariable
{ after(grammarAccess.getAsignacionVariableRule()); } 
	 EOF 
;

// Rule AsignacionVariable
ruleAsignacionVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsignacionVariableAccess().getGroup()); }
		(rule__AsignacionVariable__Group__0)
		{ after(grammarAccess.getAsignacionVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoDeDato
entryRuleTipoDeDato
:
{ before(grammarAccess.getTipoDeDatoRule()); }
	 ruleTipoDeDato
{ after(grammarAccess.getTipoDeDatoRule()); } 
	 EOF 
;

// Rule TipoDeDato
ruleTipoDeDato 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getAlternatives()); }
		(rule__TipoDeDato__Alternatives)
		{ after(grammarAccess.getTipoDeDatoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresion
entryRuleExpresion
:
{ before(grammarAccess.getExpresionRule()); }
	 ruleExpresion
{ after(grammarAccess.getExpresionRule()); } 
	 EOF 
;

// Rule Expresion
ruleExpresion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionAccess().getAlternatives()); }
		(rule__Expresion__Alternatives)
		{ after(grammarAccess.getExpresionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlamadoVariable
entryRuleLlamadoVariable
:
{ before(grammarAccess.getLlamadoVariableRule()); }
	 ruleLlamadoVariable
{ after(grammarAccess.getLlamadoVariableRule()); } 
	 EOF 
;

// Rule LlamadoVariable
ruleLlamadoVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlamadoVariableAccess().getVariableAssignment()); }
		(rule__LlamadoVariable__VariableAssignment)
		{ after(grammarAccess.getLlamadoVariableAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlamadoFuncion
entryRuleLlamadoFuncion
:
{ before(grammarAccess.getLlamadoFuncionRule()); }
	 ruleLlamadoFuncion
{ after(grammarAccess.getLlamadoFuncionRule()); } 
	 EOF 
;

// Rule LlamadoFuncion
ruleLlamadoFuncion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlamadoFuncionAccess().getGroup()); }
		(rule__LlamadoFuncion__Group__0)
		{ after(grammarAccess.getLlamadoFuncionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionDecimal
entryRuleExpresionDecimal
:
{ before(grammarAccess.getExpresionDecimalRule()); }
	 ruleExpresionDecimal
{ after(grammarAccess.getExpresionDecimalRule()); } 
	 EOF 
;

// Rule ExpresionDecimal
ruleExpresionDecimal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getAlternatives()); }
		(rule__ExpresionDecimal__Alternatives)
		{ after(grammarAccess.getExpresionDecimalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionNegativo
entryRuleExpresionNegativo
:
{ before(grammarAccess.getExpresionNegativoRule()); }
	 ruleExpresionNegativo
{ after(grammarAccess.getExpresionNegativoRule()); } 
	 EOF 
;

// Rule ExpresionNegativo
ruleExpresionNegativo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionNegativoAccess().getGroup()); }
		(rule__ExpresionNegativo__Group__0)
		{ after(grammarAccess.getExpresionNegativoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionSimpleXokas
entryRuleExpresionSimpleXokas
:
{ before(grammarAccess.getExpresionSimpleXokasRule()); }
	 ruleExpresionSimpleXokas
{ after(grammarAccess.getExpresionSimpleXokasRule()); } 
	 EOF 
;

// Rule ExpresionSimpleXokas
ruleExpresionSimpleXokas 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getGroup()); }
		(rule__ExpresionSimpleXokas__Group__0)
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionSimpleAritmetica
entryRuleExpresionSimpleAritmetica
:
{ before(grammarAccess.getExpresionSimpleAritmeticaRule()); }
	 ruleExpresionSimpleAritmetica
{ after(grammarAccess.getExpresionSimpleAritmeticaRule()); } 
	 EOF 
;

// Rule ExpresionSimpleAritmetica
ruleExpresionSimpleAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionSimpleAritmeticaAccess().getXAssignment()); }
		(rule__ExpresionSimpleAritmetica__XAssignment)
		{ after(grammarAccess.getExpresionSimpleAritmeticaAccess().getXAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionLongitudString
entryRuleExpresionLongitudString
:
{ before(grammarAccess.getExpresionLongitudStringRule()); }
	 ruleExpresionLongitudString
{ after(grammarAccess.getExpresionLongitudStringRule()); } 
	 EOF 
;

// Rule ExpresionLongitudString
ruleExpresionLongitudString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionLongitudStringAccess().getGroup()); }
		(rule__ExpresionLongitudString__Group__0)
		{ after(grammarAccess.getExpresionLongitudStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionAritmetica
entryRuleExpresionAritmetica
:
{ before(grammarAccess.getExpresionAritmeticaRule()); }
	 ruleExpresionAritmetica
{ after(grammarAccess.getExpresionAritmeticaRule()); } 
	 EOF 
;

// Rule ExpresionAritmetica
ruleExpresionAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getAlternatives()); }
		(rule__ExpresionAritmetica__Alternatives)
		{ after(grammarAccess.getExpresionAritmeticaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuma
entryRuleSuma
:
{ before(grammarAccess.getSumaRule()); }
	 ruleSuma
{ after(grammarAccess.getSumaRule()); } 
	 EOF 
;

// Rule Suma
ruleSuma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumaAccess().getGroup()); }
		(rule__Suma__Group__0)
		{ after(grammarAccess.getSumaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResta
entryRuleResta
:
{ before(grammarAccess.getRestaRule()); }
	 ruleResta
{ after(grammarAccess.getRestaRule()); } 
	 EOF 
;

// Rule Resta
ruleResta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestaAccess().getGroup()); }
		(rule__Resta__Group__0)
		{ after(grammarAccess.getRestaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicacion
entryRuleMultiplicacion
:
{ before(grammarAccess.getMultiplicacionRule()); }
	 ruleMultiplicacion
{ after(grammarAccess.getMultiplicacionRule()); } 
	 EOF 
;

// Rule Multiplicacion
ruleMultiplicacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicacionAccess().getGroup()); }
		(rule__Multiplicacion__Group__0)
		{ after(grammarAccess.getMultiplicacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivision
entryRuleDivision
:
{ before(grammarAccess.getDivisionRule()); }
	 ruleDivision
{ after(grammarAccess.getDivisionRule()); } 
	 EOF 
;

// Rule Division
ruleDivision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivisionAccess().getGroup()); }
		(rule__Division__Group__0)
		{ after(grammarAccess.getDivisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModulo
entryRuleModulo
:
{ before(grammarAccess.getModuloRule()); }
	 ruleModulo
{ after(grammarAccess.getModuloRule()); } 
	 EOF 
;

// Rule Modulo
ruleModulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuloAccess().getGroup()); }
		(rule__Modulo__Group__0)
		{ after(grammarAccess.getModuloAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperacion
entryRuleOperacion
:
{ before(grammarAccess.getOperacionRule()); }
	 ruleOperacion
{ after(grammarAccess.getOperacionRule()); } 
	 EOF 
;

// Rule Operacion
ruleOperacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperacionAccess().getGroup()); }
		(rule__Operacion__Group__0)
		{ after(grammarAccess.getOperacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionString
entryRuleExpresionString
:
{ before(grammarAccess.getExpresionStringRule()); }
	 ruleExpresionString
{ after(grammarAccess.getExpresionStringRule()); } 
	 EOF 
;

// Rule ExpresionString
ruleExpresionString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionStringAccess().getAlternatives()); }
		(rule__ExpresionString__Alternatives)
		{ after(grammarAccess.getExpresionStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionSimpleString
entryRuleExpresionSimpleString
:
{ before(grammarAccess.getExpresionSimpleStringRule()); }
	 ruleExpresionSimpleString
{ after(grammarAccess.getExpresionSimpleStringRule()); } 
	 EOF 
;

// Rule ExpresionSimpleString
ruleExpresionSimpleString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionSimpleStringAccess().getXAssignment()); }
		(rule__ExpresionSimpleString__XAssignment)
		{ after(grammarAccess.getExpresionSimpleStringAccess().getXAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionConcatenacion
entryRuleExpresionConcatenacion
:
{ before(grammarAccess.getExpresionConcatenacionRule()); }
	 ruleExpresionConcatenacion
{ after(grammarAccess.getExpresionConcatenacionRule()); } 
	 EOF 
;

// Rule ExpresionConcatenacion
ruleExpresionConcatenacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionConcatenacionAccess().getGroup()); }
		(rule__ExpresionConcatenacion__Group__0)
		{ after(grammarAccess.getExpresionConcatenacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionBooleana
entryRuleExpresionBooleana
:
{ before(grammarAccess.getExpresionBooleanaRule()); }
	 ruleExpresionBooleana
{ after(grammarAccess.getExpresionBooleanaRule()); } 
	 EOF 
;

// Rule ExpresionBooleana
ruleExpresionBooleana 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionBooleanaAccess().getAlternatives()); }
		(rule__ExpresionBooleana__Alternatives)
		{ after(grammarAccess.getExpresionBooleanaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionOperacionesBooleanas
entryRuleExpresionOperacionesBooleanas
:
{ before(grammarAccess.getExpresionOperacionesBooleanasRule()); }
	 ruleExpresionOperacionesBooleanas
{ after(grammarAccess.getExpresionOperacionesBooleanasRule()); } 
	 EOF 
;

// Rule ExpresionOperacionesBooleanas
ruleExpresionOperacionesBooleanas 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getAlternatives()); }
		(rule__ExpresionOperacionesBooleanas__Alternatives)
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperacionesBooleanasDeComparacion
entryRuleOperacionesBooleanasDeComparacion
:
{ before(grammarAccess.getOperacionesBooleanasDeComparacionRule()); }
	 ruleOperacionesBooleanasDeComparacion
{ after(grammarAccess.getOperacionesBooleanasDeComparacionRule()); } 
	 EOF 
;

// Rule OperacionesBooleanasDeComparacion
ruleOperacionesBooleanasDeComparacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getGroup()); }
		(rule__OperacionesBooleanasDeComparacion__Group__0)
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionStringVacio
entryRuleExpresionStringVacio
:
{ before(grammarAccess.getExpresionStringVacioRule()); }
	 ruleExpresionStringVacio
{ after(grammarAccess.getExpresionStringVacioRule()); } 
	 EOF 
;

// Rule ExpresionStringVacio
ruleExpresionStringVacio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionStringVacioAccess().getGroup()); }
		(rule__ExpresionStringVacio__Group__0)
		{ after(grammarAccess.getExpresionStringVacioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperadoresLogicosBooleanos
entryRuleOperadoresLogicosBooleanos
:
{ before(grammarAccess.getOperadoresLogicosBooleanosRule()); }
	 ruleOperadoresLogicosBooleanos
{ after(grammarAccess.getOperadoresLogicosBooleanosRule()); } 
	 EOF 
;

// Rule OperadoresLogicosBooleanos
ruleOperadoresLogicosBooleanos 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getGroup()); }
		(rule__OperadoresLogicosBooleanos__Group__0)
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperacionesBooleanasDeComparacionAritmetica
entryRuleOperacionesBooleanasDeComparacionAritmetica
:
{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule()); }
	 ruleOperacionesBooleanasDeComparacionAritmetica
{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule()); } 
	 EOF 
;

// Rule OperacionesBooleanasDeComparacionAritmetica
ruleOperacionesBooleanasDeComparacionAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getGroup()); }
		(rule__OperacionesBooleanasDeComparacionAritmetica__Group__0)
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpNEG
entryRuleOpNEG
:
{ before(grammarAccess.getOpNEGRule()); }
	 ruleOpNEG
{ after(grammarAccess.getOpNEGRule()); } 
	 EOF 
;

// Rule OpNEG
ruleOpNEG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpNEGAccess().getGroup()); }
		(rule__OpNEG__Group__0)
		{ after(grammarAccess.getOpNEGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpComp
entryRuleOpComp
:
{ before(grammarAccess.getOpCompRule()); }
	 ruleOpComp
{ after(grammarAccess.getOpCompRule()); } 
	 EOF 
;

// Rule OpComp
ruleOpComp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpCompAccess().getGroup()); }
		(rule__OpComp__Group__0)
		{ after(grammarAccess.getOpCompAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresionBooleanaSimple
entryRuleExpresionBooleanaSimple
:
{ before(grammarAccess.getExpresionBooleanaSimpleRule()); }
	 ruleExpresionBooleanaSimple
{ after(grammarAccess.getExpresionBooleanaSimpleRule()); } 
	 EOF 
;

// Rule ExpresionBooleanaSimple
ruleExpresionBooleanaSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionBooleanaSimpleAccess().getXAssignment()); }
		(rule__ExpresionBooleanaSimple__XAssignment)
		{ after(grammarAccess.getExpresionBooleanaSimpleAccess().getXAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruccion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstruccionAccess().getDeclVariablesParserRuleCall_0()); }
		ruleDeclVariables
		{ after(grammarAccess.getInstruccionAccess().getDeclVariablesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getImprimirParserRuleCall_1()); }
		ruleImprimir
		{ after(grammarAccess.getInstruccionAccess().getImprimirParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
		ruleCondicional
		{ after(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getSwitchParserRuleCall_3()); }
		ruleSwitch
		{ after(grammarAccess.getInstruccionAccess().getSwitchParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getForParserRuleCall_4()); }
		ruleFor
		{ after(grammarAccess.getInstruccionAccess().getForParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getWhileParserRuleCall_5()); }
		ruleWhile
		{ after(grammarAccess.getInstruccionAccess().getWhileParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getDoWhileParserRuleCall_6()); }
		ruleDoWhile
		{ after(grammarAccess.getInstruccionAccess().getDoWhileParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getFuncionesParserRuleCall_7()); }
		ruleFunciones
		{ after(grammarAccess.getInstruccionAccess().getFuncionesParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getAsignacionVariableParserRuleCall_8()); }
		ruleAsignacionVariable
		{ after(grammarAccess.getInstruccionAccess().getAsignacionVariableParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getLlamadoMetodoParserRuleCall_9()); }
		ruleLlamadoMetodo
		{ after(grammarAccess.getInstruccionAccess().getLlamadoMetodoParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstruccionAccess().getImprimirSinSaltoDeLineaParserRuleCall_10()); }
		ruleImprimirSinSaltoDeLinea
		{ after(grammarAccess.getInstruccionAccess().getImprimirSinSaltoDeLineaParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoDeDato__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getDALASKeyword_0()); }
		'DALAS'
		{ after(grammarAccess.getTipoDeDatoAccess().getDALASKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getMRBEASTKeyword_1()); }
		'MRBEAST'
		{ after(grammarAccess.getTipoDeDatoAccess().getMRBEASTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getXOKASKeyword_2()); }
		'XOKAS'
		{ after(grammarAccess.getTipoDeDatoAccess().getXOKASKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getYINYANGKeyword_3()); }
		'YINYANG'
		{ after(grammarAccess.getTipoDeDatoAccess().getYINYANGKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTipoDeDatoAccess().getMICORAZONKeyword_4()); }
		'MICORAZON'
		{ after(grammarAccess.getTipoDeDatoAccess().getMICORAZONKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getExpresionDecimalParserRuleCall_0()); }
		ruleExpresionDecimal
		{ after(grammarAccess.getExpresionAccess().getExpresionDecimalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getExpresionStringParserRuleCall_1()); }
		ruleExpresionString
		{ after(grammarAccess.getExpresionAccess().getExpresionStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getExpresionBooleanaParserRuleCall_2()); }
		ruleExpresionBooleana
		{ after(grammarAccess.getExpresionAccess().getExpresionBooleanaParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getLlamadoVariableParserRuleCall_3()); }
		ruleLlamadoVariable
		{ after(grammarAccess.getExpresionAccess().getLlamadoVariableParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getLlamadoFuncionParserRuleCall_4()); }
		ruleLlamadoFuncion
		{ after(grammarAccess.getExpresionAccess().getLlamadoFuncionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionDecimal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getExpresionAritmeticaParserRuleCall_0()); }
		ruleExpresionAritmetica
		{ after(grammarAccess.getExpresionDecimalAccess().getExpresionAritmeticaParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleAritmeticaParserRuleCall_1()); }
		ruleExpresionSimpleAritmetica
		{ after(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleAritmeticaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleXokasParserRuleCall_2()); }
		ruleExpresionSimpleXokas
		{ after(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleXokasParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getExpresionLongitudStringParserRuleCall_3()); }
		ruleExpresionLongitudString
		{ after(grammarAccess.getExpresionDecimalAccess().getExpresionLongitudStringParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionDecimalAccess().getExpresionNegativoParserRuleCall_4()); }
		ruleExpresionNegativo
		{ after(grammarAccess.getExpresionDecimalAccess().getExpresionNegativoParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_0()); }
		'e'
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_1()); }
		'E'
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionAritmetica__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getSumaParserRuleCall_0()); }
		ruleSuma
		{ after(grammarAccess.getExpresionAritmeticaAccess().getSumaParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getRestaParserRuleCall_1()); }
		ruleResta
		{ after(grammarAccess.getExpresionAritmeticaAccess().getRestaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getMultiplicacionParserRuleCall_2()); }
		ruleMultiplicacion
		{ after(grammarAccess.getExpresionAritmeticaAccess().getMultiplicacionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getDivisionParserRuleCall_3()); }
		ruleDivision
		{ after(grammarAccess.getExpresionAritmeticaAccess().getDivisionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAritmeticaAccess().getModuloParserRuleCall_4()); }
		ruleModulo
		{ after(grammarAccess.getExpresionAritmeticaAccess().getModuloParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionStringAccess().getExpresionConcatenacionParserRuleCall_0()); }
		ruleExpresionConcatenacion
		{ after(grammarAccess.getExpresionStringAccess().getExpresionConcatenacionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionStringAccess().getExpresionSimpleStringParserRuleCall_1()); }
		ruleExpresionSimpleString
		{ after(grammarAccess.getExpresionStringAccess().getExpresionSimpleStringParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionBooleana__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionBooleanaAccess().getExpresionOperacionesBooleanasParserRuleCall_0()); }
		ruleExpresionOperacionesBooleanas
		{ after(grammarAccess.getExpresionBooleanaAccess().getExpresionOperacionesBooleanasParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionBooleanaAccess().getExpresionBooleanaSimpleParserRuleCall_1()); }
		ruleExpresionBooleanaSimple
		{ after(grammarAccess.getExpresionBooleanaAccess().getExpresionBooleanaSimpleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionOperacionesBooleanas__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionParserRuleCall_0()); }
		ruleOperacionesBooleanasDeComparacion
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionAritmeticaParserRuleCall_1()); }
		ruleOperacionesBooleanasDeComparacionAritmetica
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionAritmeticaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperadoresLogicosBooleanosParserRuleCall_2()); }
		ruleOperadoresLogicosBooleanos
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperadoresLogicosBooleanosParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getOpNEGParserRuleCall_3()); }
		ruleOpNEG
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getOpNEGParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionOperacionesBooleanasAccess().getExpresionStringVacioParserRuleCall_4()); }
		ruleExpresionStringVacio
		{ after(grammarAccess.getExpresionOperacionesBooleanasAccess().getExpresionStringVacioParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__XAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXPOXIKeyword_0_0_0()); }
		'POXI'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXPOXIKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAGUAKeyword_0_0_1()); }
		'AGUA'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAGUAKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__YAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYPOLKeyword_2_0_0()); }
		'POL'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYPOLKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYRRASKeyword_2_0_1()); }
		'RRAS'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYRRASKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__XAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getXPEPEKeyword_0_0_0()); }
		'PEPE'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getXPEPEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getXNARKeyword_0_0_1()); }
		'NAR'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getXNARKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getXXOKeyword_0_0_2()); }
		'XO'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getXXOKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__YAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getYPANDAKeyword_2_0_0()); }
		'PANDA'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getYPANDAKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getYANJAKeyword_2_0_1()); }
		'ANJA'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getYANJAKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getYRKeyword_2_0_2()); }
		'R'
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getYRKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__XAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXLEGALKeyword_0_0_0()); }
		'LEGAL'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXLEGALKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXILEGALKeyword_0_0_1()); }
		'ILEGAL'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXILEGALKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXALEGALKeyword_0_0_2()); }
		'ALEGAL'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXALEGALKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXANTILEGALKeyword_0_0_3()); }
		'ANTILEGAL'
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXANTILEGALKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionBooleanaSimple__XAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionBooleanaSimpleAccess().getXYINKeyword_0_0()); }
		'YIN'
		{ after(grammarAccess.getExpresionBooleanaSimpleAccess().getXYINKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionBooleanaSimpleAccess().getXYANGKeyword_0_1()); }
		'YANG'
		{ after(grammarAccess.getExpresionBooleanaSimpleAccess().getXYANGKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__0__Impl
	rule__Programa__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getNameAssignment_0()); }
	(rule__Programa__NameAssignment_0)
	{ after(grammarAccess.getProgramaAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__1__Impl
	rule__Programa__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getPOKeyword_1()); }
	'PO'
	{ after(grammarAccess.getProgramaAccess().getPOKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__2__Impl
	rule__Programa__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getEjAssignment_2()); }
	(rule__Programa__EjAssignment_2)
	{ after(grammarAccess.getProgramaAccess().getEjAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getLEKeyword_3()); }
	'LE'
	{ after(grammarAccess.getProgramaAccess().getLEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoMetodo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__0__Impl
	rule__LlamadoMetodo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getEYYOLVIDONAKeyword_0()); }
	'EYYOLVIDONA'
	{ after(grammarAccess.getLlamadoMetodoAccess().getEYYOLVIDONAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__1__Impl
	rule__LlamadoMetodo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getMethodAssignment_1()); }
	(rule__LlamadoMetodo__MethodAssignment_1)
	{ after(grammarAccess.getLlamadoMetodoAccess().getMethodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__2__Impl
	rule__LlamadoMetodo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLlamadoMetodoAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__3__Impl
	rule__LlamadoMetodo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getGroup_3()); }
	(rule__LlamadoMetodo__Group_3__0)*
	{ after(grammarAccess.getLlamadoMetodoAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLlamadoMetodoAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoMetodo__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3__0__Impl
	rule__LlamadoMetodo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getEYKeyword_3_0()); }
	'EY'
	{ after(grammarAccess.getLlamadoMetodoAccess().getEYKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoMetodo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_1()); }
	(rule__LlamadoMetodo__ArgsAssignment_3_1)
	{ after(grammarAccess.getLlamadoMetodoAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funciones__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__0__Impl
	rule__Funciones__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getOIGOKeyword_0()); }
	'OIGO'
	{ after(grammarAccess.getFuncionesAccess().getOIGOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__1__Impl
	rule__Funciones__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getTipoDeDatoAssignment_1()); }
	(rule__Funciones__TipoDeDatoAssignment_1)
	{ after(grammarAccess.getFuncionesAccess().getTipoDeDatoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__2__Impl
	rule__Funciones__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getNameAssignment_2()); }
	(rule__Funciones__NameAssignment_2)
	{ after(grammarAccess.getFuncionesAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__3__Impl
	rule__Funciones__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getGroup_3()); }
	(rule__Funciones__Group_3__0)*
	{ after(grammarAccess.getFuncionesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__4__Impl
	rule__Funciones__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getInstrAssignment_4()); }
	(rule__Funciones__InstrAssignment_4)*
	{ after(grammarAccess.getFuncionesAccess().getInstrAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__5__Impl
	rule__Funciones__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getGroup_5()); }
	(rule__Funciones__Group_5__0)?
	{ after(grammarAccess.getFuncionesAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getBORROSOKeyword_6()); }
	'BORROSO'
	{ after(grammarAccess.getFuncionesAccess().getBORROSOKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funciones__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group_3__0__Impl
	rule__Funciones__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getMUYKeyword_3_0()); }
	'MUY'
	{ after(grammarAccess.getFuncionesAccess().getMUYKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getParamAssignment_3_1()); }
	(rule__Funciones__ParamAssignment_3_1)
	{ after(grammarAccess.getFuncionesAccess().getParamAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funciones__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group_5__0__Impl
	rule__Funciones__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getPEROMUYKeyword_5_0()); }
	'PEROMUY'
	{ after(grammarAccess.getFuncionesAccess().getPEROMUYKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funciones__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionesAccess().getEAssignment_5_1()); }
	(rule__Funciones__EAssignment_5_1)
	{ after(grammarAccess.getFuncionesAccess().getEAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imprimir__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imprimir__Group__0__Impl
	rule__Imprimir__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirAccess().getPARATICONDESPRECIOKeyword_0()); }
	'PARATICONDESPRECIO'
	{ after(grammarAccess.getImprimirAccess().getPARATICONDESPRECIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imprimir__Group__1__Impl
	rule__Imprimir__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirAccess().getEAssignment_1()); }
	(rule__Imprimir__EAssignment_1)
	{ after(grammarAccess.getImprimirAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imprimir__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirAccess().getGroup_2()); }
	(rule__Imprimir__Group_2__0)*
	{ after(grammarAccess.getImprimirAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imprimir__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imprimir__Group_2__0__Impl
	rule__Imprimir__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirAccess().getCommercialAtKeyword_2_0()); }
	'@'
	{ after(grammarAccess.getImprimirAccess().getCommercialAtKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imprimir__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirAccess().getE1Assignment_2_1()); }
	(rule__Imprimir__E1Assignment_2_1)
	{ after(grammarAccess.getImprimirAccess().getE1Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImprimirSinSaltoDeLinea__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImprimirSinSaltoDeLinea__Group__0__Impl
	rule__ImprimirSinSaltoDeLinea__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getPARATIKeyword_0()); }
	'PARATI'
	{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getPARATIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImprimirSinSaltoDeLinea__Group__1__Impl
	rule__ImprimirSinSaltoDeLinea__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getEAssignment_1()); }
	(rule__ImprimirSinSaltoDeLinea__EAssignment_1)
	{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImprimirSinSaltoDeLinea__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getGroup_2()); }
	(rule__ImprimirSinSaltoDeLinea__Group_2__0)*
	{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImprimirSinSaltoDeLinea__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImprimirSinSaltoDeLinea__Group_2__0__Impl
	rule__ImprimirSinSaltoDeLinea__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getCommercialAtKeyword_2_0()); }
	'@'
	{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getCommercialAtKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImprimirSinSaltoDeLinea__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getE1Assignment_2_1()); }
	(rule__ImprimirSinSaltoDeLinea__E1Assignment_2_1)
	{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getE1Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__0__Impl
	rule__Condicional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getGGKeyword_0()); }
	'GG?'
	{ after(grammarAccess.getCondicionalAccess().getGGKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__1__Impl
	rule__Condicional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getExprAssignment_1()); }
	(rule__Condicional__ExprAssignment_1)
	{ after(grammarAccess.getCondicionalAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__2__Impl
	rule__Condicional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getWITHTEAMKeyword_2()); }
	'WITHTEAM'
	{ after(grammarAccess.getCondicionalAccess().getWITHTEAMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__3__Impl
	rule__Condicional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getInstrAssignment_3()); }
	(rule__Condicional__InstrAssignment_3)*
	{ after(grammarAccess.getCondicionalAccess().getInstrAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__4__Impl
	rule__Condicional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getCasiTeamAssignment_4()); }
	(rule__Condicional__CasiTeamAssignment_4)*
	{ after(grammarAccess.getCondicionalAccess().getCasiTeamAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__5__Impl
	rule__Condicional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getGroup_5()); }
	(rule__Condicional__Group_5__0)?
	{ after(grammarAccess.getCondicionalAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getEZKeyword_6()); }
	'EZ'
	{ after(grammarAccess.getCondicionalAccess().getEZKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condicional__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_5__0__Impl
	rule__Condicional__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getNOTEAMKeyword_5_0()); }
	'NOTEAM'
	{ after(grammarAccess.getCondicionalAccess().getNOTEAMKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condicional__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalAccess().getInstrElseAssignment_5_1()); }
	(rule__Condicional__InstrElseAssignment_5_1)*
	{ after(grammarAccess.getCondicionalAccess().getInstrElseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondicionalElseIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondicionalElseIf__Group__0__Impl
	rule__CondicionalElseIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalElseIfAccess().getCASITEAMKeyword_0()); }
	'CASITEAM'
	{ after(grammarAccess.getCondicionalElseIfAccess().getCASITEAMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondicionalElseIf__Group__1__Impl
	rule__CondicionalElseIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalElseIfAccess().getExprELIFAssignment_1()); }
	(rule__CondicionalElseIf__ExprELIFAssignment_1)
	{ after(grammarAccess.getCondicionalElseIfAccess().getExprELIFAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondicionalElseIf__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondicionalElseIfAccess().getInstrELIFAssignment_2()); }
	(rule__CondicionalElseIf__InstrELIFAssignment_2)*
	{ after(grammarAccess.getCondicionalElseIfAccess().getInstrELIFAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__0__Impl
	rule__Switch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getVarAssignment_0()); }
	(rule__Switch__VarAssignment_0)
	{ after(grammarAccess.getSwitchAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__1__Impl
	rule__Switch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getRULETARUSAKeyword_1()); }
	'RULETARUSA?'
	{ after(grammarAccess.getSwitchAccess().getRULETARUSAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__2__Impl
	rule__Switch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSwitchAccess().getCaseAssignment_2()); }
		(rule__Switch__CaseAssignment_2)
		{ after(grammarAccess.getSwitchAccess().getCaseAssignment_2()); }
	)
	(
		{ before(grammarAccess.getSwitchAccess().getCaseAssignment_2()); }
		(rule__Switch__CaseAssignment_2)*
		{ after(grammarAccess.getSwitchAccess().getCaseAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getBOOMKeyword_3()); }
	'BOOM'
	{ after(grammarAccess.getSwitchAccess().getBOOMKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseSwitch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseSwitch__Group__0__Impl
	rule__CaseSwitch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseSwitchAccess().getBALAKeyword_0()); }
	'BALA'
	{ after(grammarAccess.getCaseSwitchAccess().getBALAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseSwitch__Group__1__Impl
	rule__CaseSwitch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseSwitchAccess().getEAssignment_1()); }
	(rule__CaseSwitch__EAssignment_1)
	{ after(grammarAccess.getCaseSwitchAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseSwitch__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseSwitchAccess().getInstrAssignment_2()); }
	(rule__CaseSwitch__InstrAssignment_2)*
	{ after(grammarAccess.getCaseSwitchAccess().getInstrAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getCHOCOKeyword_0()); }
	'CHOCO'
	{ after(grammarAccess.getForAccess().getCHOCOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getNameAssignment_1()); }
	(rule__For__NameAssignment_1)
	{ after(grammarAccess.getForAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getVarAssignment_2()); }
	(rule__For__VarAssignment_2)
	{ after(grammarAccess.getForAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getYVOLOKeyword_3()); }
	'YVOLO'
	{ after(grammarAccess.getForAccess().getYVOLOKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getExprAssignment_4()); }
	(rule__For__ExprAssignment_4)
	{ after(grammarAccess.getForAccess().getExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getYYOVOLEKeyword_5()); }
	'YYOVOLE'
	{ after(grammarAccess.getForAccess().getYYOVOLEKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__6__Impl
	rule__For__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getAsigAssignment_6()); }
	(rule__For__AsigAssignment_6)
	{ after(grammarAccess.getForAccess().getAsigAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__7__Impl
	rule__For__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getInstrAssignment_7()); }
	(rule__For__InstrAssignment_7)*
	{ after(grammarAccess.getForAccess().getInstrAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getYSEFUEKeyword_8()); }
	'YSEFUE'
	{ after(grammarAccess.getForAccess().getYSEFUEKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getSAKeyword_0()); }
	'SA'
	{ after(grammarAccess.getWhileAccess().getSAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getNameAssignment_1()); }
	(rule__While__NameAssignment_1)
	{ after(grammarAccess.getWhileAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getMATAOKeyword_2()); }
	'MATAO'
	{ after(grammarAccess.getWhileAccess().getMATAOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getExprAssignment_3()); }
	(rule__While__ExprAssignment_3)
	{ after(grammarAccess.getWhileAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getInstrAssignment_4()); }
	(rule__While__InstrAssignment_4)*
	{ after(grammarAccess.getWhileAccess().getInstrAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getPACOKeyword_5()); }
	'PACO'
	{ after(grammarAccess.getWhileAccess().getPACOKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhile__Group__0__Impl
	rule__DoWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileAccess().getAHITEVAMIKeyword_0()); }
	'AHITEVAMI'
	{ after(grammarAccess.getDoWhileAccess().getAHITEVAMIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhile__Group__1__Impl
	rule__DoWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileAccess().getNameAssignment_1()); }
	(rule__DoWhile__NameAssignment_1)
	{ after(grammarAccess.getDoWhileAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhile__Group__2__Impl
	rule__DoWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileAccess().getInstrAssignment_2()); }
	(rule__DoWhile__InstrAssignment_2)*
	{ after(grammarAccess.getDoWhileAccess().getInstrAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhile__Group__3__Impl
	rule__DoWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileAccess().getDOLORKeyword_3()); }
	'DOLOR'
	{ after(grammarAccess.getDoWhileAccess().getDOLORKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileAccess().getExprAssignment_4()); }
	(rule__DoWhile__ExprAssignment_4)
	{ after(grammarAccess.getDoWhileAccess().getExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables__Group__0__Impl
	rule__DeclVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariablesAccess().getPEREMENNAYAKeyword_0()); }
	'PEREMENNAYA'
	{ after(grammarAccess.getDeclVariablesAccess().getPEREMENNAYAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables__Group__1__Impl
	rule__DeclVariables__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariablesAccess().getTipoDeDatoAssignment_1()); }
	(rule__DeclVariables__TipoDeDatoAssignment_1)
	{ after(grammarAccess.getDeclVariablesAccess().getTipoDeDatoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables__Group__2__Impl
	rule__DeclVariables__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariablesAccess().getNameAssignment_2()); }
	(rule__DeclVariables__NameAssignment_2)
	{ after(grammarAccess.getDeclVariablesAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables__Group__3__Impl
	rule__DeclVariables__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariablesAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getDeclVariablesAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariablesAccess().getValorAssignment_4()); }
	(rule__DeclVariables__ValorAssignment_4)
	{ after(grammarAccess.getDeclVariablesAccess().getValorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVariables2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables2__Group__0__Impl
	rule__DeclVariables2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariables2Access().getTipoDeDatoAssignment_0()); }
	(rule__DeclVariables2__TipoDeDatoAssignment_0)
	{ after(grammarAccess.getDeclVariables2Access().getTipoDeDatoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVariables2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVariables2Access().getNameAssignment_1()); }
	(rule__DeclVariables2__NameAssignment_1)
	{ after(grammarAccess.getDeclVariables2Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AsignacionVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsignacionVariable__Group__0__Impl
	rule__AsignacionVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionVariableAccess().getVariableAssignment_0()); }
	(rule__AsignacionVariable__VariableAssignment_0)
	{ after(grammarAccess.getAsignacionVariableAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsignacionVariable__Group__1__Impl
	rule__AsignacionVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionVariableAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getAsignacionVariableAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsignacionVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionVariableAccess().getValorAssignment_2()); }
	(rule__AsignacionVariable__ValorAssignment_2)
	{ after(grammarAccess.getAsignacionVariableAccess().getValorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoFuncion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group__0__Impl
	rule__LlamadoFuncion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getEYYOLVIDONAKeyword_0()); }
	'EYYOLVIDONA'
	{ after(grammarAccess.getLlamadoFuncionAccess().getEYYOLVIDONAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group__1__Impl
	rule__LlamadoFuncion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getFuncAssignment_1()); }
	(rule__LlamadoFuncion__FuncAssignment_1)
	{ after(grammarAccess.getLlamadoFuncionAccess().getFuncAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group__2__Impl
	rule__LlamadoFuncion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLlamadoFuncionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group__3__Impl
	rule__LlamadoFuncion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getGroup_3()); }
	(rule__LlamadoFuncion__Group_3__0)*
	{ after(grammarAccess.getLlamadoFuncionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLlamadoFuncionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoFuncion__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group_3__0__Impl
	rule__LlamadoFuncion__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getEYKeyword_3_0()); }
	'EY'
	{ after(grammarAccess.getLlamadoFuncionAccess().getEYKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFuncion__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncionAccess().getArgsAssignment_3_1()); }
	(rule__LlamadoFuncion__ArgsAssignment_3_1)
	{ after(grammarAccess.getLlamadoFuncionAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionNegativo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionNegativo__Group__0__Impl
	rule__ExpresionNegativo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionNegativo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionNegativoAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExpresionNegativoAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionNegativo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionNegativo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionNegativo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionNegativoAccess().getEAssignment_1()); }
	(rule__ExpresionNegativo__EAssignment_1)
	{ after(grammarAccess.getExpresionNegativoAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionSimpleXokas__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group__0__Impl
	rule__ExpresionSimpleXokas__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getXAssignment_0()); }
	(rule__ExpresionSimpleXokas__XAssignment_0)
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group__1__Impl
	rule__ExpresionSimpleXokas__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group__2__Impl
	rule__ExpresionSimpleXokas__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getYAssignment_2()); }
	(rule__ExpresionSimpleXokas__YAssignment_2)
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getGroup_3()); }
	(rule__ExpresionSimpleXokas__Group_3__0)?
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionSimpleXokas__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group_3__0__Impl
	rule__ExpresionSimpleXokas__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getAlternatives_3_0()); }
	(rule__ExpresionSimpleXokas__Alternatives_3_0)
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group_3__1__Impl
	rule__ExpresionSimpleXokas__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getHyphenMinusKeyword_3_1()); }
	('-')?
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getHyphenMinusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionSimpleXokas__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionSimpleXokasAccess().getZAssignment_3_2()); }
	(rule__ExpresionSimpleXokas__ZAssignment_3_2)
	{ after(grammarAccess.getExpresionSimpleXokasAccess().getZAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionLongitudString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionLongitudString__Group__0__Impl
	rule__ExpresionLongitudString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionLongitudString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionLongitudStringAccess().getKGRANDEKeyword_0()); }
	'KGRANDE'
	{ after(grammarAccess.getExpresionLongitudStringAccess().getKGRANDEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionLongitudString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionLongitudString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionLongitudString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionLongitudStringAccess().getLlamadoAssignment_1()); }
	(rule__ExpresionLongitudString__LlamadoAssignment_1)
	{ after(grammarAccess.getExpresionLongitudStringAccess().getLlamadoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Suma__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Suma__Group__0__Impl
	rule__Suma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumaAccess().getSUMAKeyword_0()); }
	'SUMA'
	{ after(grammarAccess.getSumaAccess().getSUMAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Suma__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumaAccess().getOpAssignment_1()); }
	(rule__Suma__OpAssignment_1)
	{ after(grammarAccess.getSumaAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resta__Group__0__Impl
	rule__Resta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestaAccess().getRESTAKeyword_0()); }
	'RESTA'
	{ after(grammarAccess.getRestaAccess().getRESTAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resta__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestaAccess().getOpAssignment_1()); }
	(rule__Resta__OpAssignment_1)
	{ after(grammarAccess.getRestaAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicacion__Group__0__Impl
	rule__Multiplicacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicacionAccess().getMULTIPLICACIONKeyword_0()); }
	'MULTIPLICACION'
	{ after(grammarAccess.getMultiplicacionAccess().getMULTIPLICACIONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicacion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicacionAccess().getOpAssignment_1()); }
	(rule__Multiplicacion__OpAssignment_1)
	{ after(grammarAccess.getMultiplicacionAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__0__Impl
	rule__Division__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getDIVISIONKeyword_0()); }
	'DIVISION'
	{ after(grammarAccess.getDivisionAccess().getDIVISIONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getOpAssignment_1()); }
	(rule__Division__OpAssignment_1)
	{ after(grammarAccess.getDivisionAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__0__Impl
	rule__Modulo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getMODULOKeyword_0()); }
	'MODULO'
	{ after(grammarAccess.getModuloAccess().getMODULOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getOpAssignment_1()); }
	(rule__Modulo__OpAssignment_1)
	{ after(grammarAccess.getModuloAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operacion__Group__0__Impl
	rule__Operacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAccess().getJULIOPROFEKeyword_0()); }
	'JULIOPROFE'
	{ after(grammarAccess.getOperacionAccess().getJULIOPROFEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operacion__Group__1__Impl
	rule__Operacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAccess().getIzqAssignment_1()); }
	(rule__Operacion__IzqAssignment_1)
	{ after(grammarAccess.getOperacionAccess().getIzqAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operacion__Group__2__Impl
	rule__Operacion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAccess().getYKeyword_2()); }
	'Y'
	{ after(grammarAccess.getOperacionAccess().getYKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operacion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionAccess().getDerAssignment_3()); }
	(rule__Operacion__DerAssignment_3)
	{ after(grammarAccess.getOperacionAccess().getDerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionConcatenacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionConcatenacion__Group__0__Impl
	rule__ExpresionConcatenacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionConcatenacionAccess().getLAKeyword_0()); }
	'LA'
	{ after(grammarAccess.getExpresionConcatenacionAccess().getLAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionConcatenacion__Group__1__Impl
	rule__ExpresionConcatenacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionConcatenacionAccess().getPrimeroAssignment_1()); }
	(rule__ExpresionConcatenacion__PrimeroAssignment_1)
	{ after(grammarAccess.getExpresionConcatenacionAccess().getPrimeroAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionConcatenacion__Group__2__Impl
	rule__ExpresionConcatenacion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionConcatenacionAccess().getGOTITAKeyword_2()); }
	'GOTITA'
	{ after(grammarAccess.getExpresionConcatenacionAccess().getGOTITAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionConcatenacion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionConcatenacionAccess().getSegundoAssignment_3()); }
	(rule__ExpresionConcatenacion__SegundoAssignment_3)
	{ after(grammarAccess.getExpresionConcatenacionAccess().getSegundoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperacionesBooleanasDeComparacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacion__Group__0__Impl
	rule__OperacionesBooleanasDeComparacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAssignment_0()); }
	(rule__OperacionesBooleanasDeComparacion__XAssignment_0)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacion__Group__1__Impl
	rule__OperacionesBooleanasDeComparacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getIzqAssignment_1()); }
	(rule__OperacionesBooleanasDeComparacion__IzqAssignment_1)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getIzqAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacion__Group__2__Impl
	rule__OperacionesBooleanasDeComparacion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYAssignment_2()); }
	(rule__OperacionesBooleanasDeComparacion__YAssignment_2)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getDerAssignment_3()); }
	(rule__OperacionesBooleanasDeComparacion__DerAssignment_3)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getDerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpresionStringVacio__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionStringVacio__Group__0__Impl
	rule__ExpresionStringVacio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionStringVacio__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionStringVacioAccess().getMIBILLETERAKeyword_0()); }
	'MIBILLETERA'
	{ after(grammarAccess.getExpresionStringVacioAccess().getMIBILLETERAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionStringVacio__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpresionStringVacio__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionStringVacio__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionStringVacioAccess().getLlamadoAssignment_1()); }
	(rule__ExpresionStringVacio__LlamadoAssignment_1)
	{ after(grammarAccess.getExpresionStringVacioAccess().getLlamadoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperadoresLogicosBooleanos__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperadoresLogicosBooleanos__Group__0__Impl
	rule__OperadoresLogicosBooleanos__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getXAssignment_0()); }
	(rule__OperadoresLogicosBooleanos__XAssignment_0)
	{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperadoresLogicosBooleanos__Group__1__Impl
	rule__OperadoresLogicosBooleanos__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getIzqAssignment_1()); }
	(rule__OperadoresLogicosBooleanos__IzqAssignment_1)
	{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getIzqAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperadoresLogicosBooleanos__Group__2__Impl
	rule__OperadoresLogicosBooleanos__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getYAssignment_2()); }
	(rule__OperadoresLogicosBooleanos__YAssignment_2)
	{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperadoresLogicosBooleanos__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getDerAssignment_3()); }
	(rule__OperadoresLogicosBooleanos__DerAssignment_3)
	{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getDerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperacionesBooleanasDeComparacionAritmetica__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacionAritmetica__Group__0__Impl
	rule__OperacionesBooleanasDeComparacionAritmetica__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXAssignment_0()); }
	(rule__OperacionesBooleanasDeComparacionAritmetica__XAssignment_0)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperacionesBooleanasDeComparacionAritmetica__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getOpAssignment_1()); }
	(rule__OperacionesBooleanasDeComparacionAritmetica__OpAssignment_1)
	{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpNEG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpNEG__Group__0__Impl
	rule__OpNEG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpNEG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpNEGAccess().getALVERRESKeyword_0()); }
	'ALVERRES'
	{ after(grammarAccess.getOpNEGAccess().getALVERRESKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpNEG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpNEG__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpNEG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpNEGAccess().getExprAssignment_1()); }
	(rule__OpNEG__ExprAssignment_1)
	{ after(grammarAccess.getOpNEGAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpComp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpComp__Group__0__Impl
	rule__OpComp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpCompAccess().getIzqAssignment_0()); }
	(rule__OpComp__IzqAssignment_0)
	{ after(grammarAccess.getOpCompAccess().getIzqAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpComp__Group__1__Impl
	rule__OpComp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpCompAccess().getCONKeyword_1()); }
	'CON'
	{ after(grammarAccess.getOpCompAccess().getCONKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpComp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpCompAccess().getDerAssignment_2()); }
	(rule__OpComp__DerAssignment_2)
	{ after(grammarAccess.getOpCompAccess().getDerAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programa__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramaAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramaAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__EjAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramaAccess().getEjEjecucionParserRuleCall_2_0()); }
		ruleEjecucion
		{ after(grammarAccess.getProgramaAccess().getEjEjecucionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ejecucion__InstrAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEjecucionAccess().getInstrInstruccionParserRuleCall_0()); }
		ruleInstruccion
		{ after(grammarAccess.getEjecucionAccess().getInstrInstruccionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__MethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getMethodFuncionesCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLlamadoMetodoAccess().getMethodFuncionesIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLlamadoMetodoAccess().getMethodFuncionesIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLlamadoMetodoAccess().getMethodFuncionesCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoMetodo__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__TipoDeDatoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0()); }
		ruleTipoDeDato
		{ after(grammarAccess.getFuncionesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionesAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncionesAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__ParamAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionesAccess().getParamDeclVariables2ParserRuleCall_3_1_0()); }
		ruleDeclVariables2
		{ after(grammarAccess.getFuncionesAccess().getParamDeclVariables2ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__InstrAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionesAccess().getInstrInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getFuncionesAccess().getInstrInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funciones__EAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionesAccess().getEExpresionParserRuleCall_5_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getFuncionesAccess().getEExpresionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImprimirAccess().getEExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getImprimirAccess().getEExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imprimir__E1Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImprimirAccess().getE1ExpresionParserRuleCall_2_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getImprimirAccess().getE1ExpresionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getEExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getEExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImprimirSinSaltoDeLinea__E1Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImprimirSinSaltoDeLineaAccess().getE1ExpresionParserRuleCall_2_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getImprimirSinSaltoDeLineaAccess().getE1ExpresionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getExprExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getCondicionalAccess().getExprExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstrAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstrInstruccionParserRuleCall_3_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCondicionalAccess().getInstrInstruccionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__CasiTeamAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getCasiTeamCondicionalElseIfParserRuleCall_4_0()); }
		ruleCondicionalElseIf
		{ after(grammarAccess.getCondicionalAccess().getCasiTeamCondicionalElseIfParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condicional__InstrElseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalAccess().getInstrElseInstruccionParserRuleCall_5_1_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCondicionalAccess().getInstrElseInstruccionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__ExprELIFAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalElseIfAccess().getExprELIFExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getCondicionalElseIfAccess().getExprELIFExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionalElseIf__InstrELIFAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondicionalElseIfAccess().getInstrELIFInstruccionParserRuleCall_2_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCondicionalElseIfAccess().getInstrELIFInstruccionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchAccess().getVarLlamadoVariableParserRuleCall_0_0()); }
		ruleLlamadoVariable
		{ after(grammarAccess.getSwitchAccess().getVarLlamadoVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__CaseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchAccess().getCaseCaseSwitchParserRuleCall_2_0()); }
		ruleCaseSwitch
		{ after(grammarAccess.getSwitchAccess().getCaseCaseSwitchParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseSwitchAccess().getEExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getCaseSwitchAccess().getEExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseSwitch__InstrAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseSwitchAccess().getInstrInstruccionParserRuleCall_2_0()); }
		ruleInstruccion
		{ after(grammarAccess.getCaseSwitchAccess().getInstrInstruccionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getForAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getVarDeclVariablesParserRuleCall_2_0()); }
		ruleDeclVariables
		{ after(grammarAccess.getForAccess().getVarDeclVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getExprExpresionBooleanaParserRuleCall_4_0()); }
		ruleExpresionBooleana
		{ after(grammarAccess.getForAccess().getExprExpresionBooleanaParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__AsigAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getAsigAsignacionVariableParserRuleCall_6_0()); }
		ruleAsignacionVariable
		{ after(grammarAccess.getForAccess().getAsigAsignacionVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__InstrAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getInstrInstruccionParserRuleCall_7_0()); }
		ruleInstruccion
		{ after(grammarAccess.getForAccess().getInstrInstruccionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWhileAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getExprExpresionParserRuleCall_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getWhileAccess().getExprExpresionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__InstrAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getInstrInstruccionParserRuleCall_4_0()); }
		ruleInstruccion
		{ after(grammarAccess.getWhileAccess().getInstrInstruccionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDoWhileAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__InstrAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileAccess().getInstrInstruccionParserRuleCall_2_0()); }
		ruleInstruccion
		{ after(grammarAccess.getDoWhileAccess().getInstrInstruccionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhile__ExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileAccess().getExprExpresionParserRuleCall_4_0()); }
		ruleExpresion
		{ after(grammarAccess.getDoWhileAccess().getExprExpresionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__TipoDeDatoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVariablesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0()); }
		ruleTipoDeDato
		{ after(grammarAccess.getDeclVariablesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVariablesAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclVariablesAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables__ValorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVariablesAccess().getValorExpresionParserRuleCall_4_0()); }
		ruleExpresion
		{ after(grammarAccess.getDeclVariablesAccess().getValorExpresionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables2__TipoDeDatoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVariables2Access().getTipoDeDatoTipoDeDatoParserRuleCall_0_0()); }
		ruleTipoDeDato
		{ after(grammarAccess.getDeclVariables2Access().getTipoDeDatoTipoDeDatoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVariables2__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVariables2Access().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclVariables2Access().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionVariableAccess().getVariableDeclVariablesCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAsignacionVariableAccess().getVariableDeclVariablesIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAsignacionVariableAccess().getVariableDeclVariablesIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAsignacionVariableAccess().getVariableDeclVariablesCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsignacionVariable__ValorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionVariableAccess().getValorExpresionParserRuleCall_2_0()); }
		ruleExpresion
		{ after(grammarAccess.getAsignacionVariableAccess().getValorExpresionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoVariable__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoVariableAccess().getVariableDeclVariablesCrossReference_0()); }
		(
			{ before(grammarAccess.getLlamadoVariableAccess().getVariableDeclVariablesIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLlamadoVariableAccess().getVariableDeclVariablesIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getLlamadoVariableAccess().getVariableDeclVariablesCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoFuncionAccess().getFuncFuncionesCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLlamadoFuncionAccess().getFuncFuncionesIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLlamadoFuncionAccess().getFuncFuncionesIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLlamadoFuncionAccess().getFuncFuncionesCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFuncion__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoFuncionAccess().getArgsExpresionParserRuleCall_3_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoFuncionAccess().getArgsExpresionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionNegativo__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionNegativoAccess().getEExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getExpresionNegativoAccess().getEExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getXINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getXINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getYINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getYINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleXokas__ZAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleXokasAccess().getZINTTerminalRuleCall_3_2_0()); }
		RULE_INT
		{ after(grammarAccess.getExpresionSimpleXokasAccess().getZINTTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleAritmetica__XAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleAritmeticaAccess().getXINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getExpresionSimpleAritmeticaAccess().getXINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionLongitudString__LlamadoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionLongitudStringAccess().getLlamadoExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getExpresionLongitudStringAccess().getLlamadoExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumaAccess().getOpOperacionParserRuleCall_1_0()); }
		ruleOperacion
		{ after(grammarAccess.getSumaAccess().getOpOperacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resta__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestaAccess().getOpOperacionParserRuleCall_1_0()); }
		ruleOperacion
		{ after(grammarAccess.getRestaAccess().getOpOperacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicacion__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicacionAccess().getOpOperacionParserRuleCall_1_0()); }
		ruleOperacion
		{ after(grammarAccess.getMultiplicacionAccess().getOpOperacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getOpOperacionParserRuleCall_1_0()); }
		ruleOperacion
		{ after(grammarAccess.getDivisionAccess().getOpOperacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getOpOperacionParserRuleCall_1_0()); }
		ruleOperacion
		{ after(grammarAccess.getModuloAccess().getOpOperacionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__IzqAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionAccess().getIzqExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperacionAccess().getIzqExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operacion__DerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionAccess().getDerExpresionParserRuleCall_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperacionAccess().getDerExpresionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionSimpleString__XAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionSimpleStringAccess().getXSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpresionSimpleStringAccess().getXSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__PrimeroAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionConcatenacionAccess().getPrimeroExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getExpresionConcatenacionAccess().getPrimeroExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionConcatenacion__SegundoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionConcatenacionAccess().getSegundoExpresionParserRuleCall_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getExpresionConcatenacionAccess().getSegundoExpresionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAlternatives_0_0()); }
		(rule__OperacionesBooleanasDeComparacion__XAlternatives_0_0)
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__IzqAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getIzqExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getIzqExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYAlternatives_2_0()); }
		(rule__OperacionesBooleanasDeComparacion__YAlternatives_2_0)
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacion__DerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getDerExpresionParserRuleCall_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getDerExpresionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionStringVacio__LlamadoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionStringVacioAccess().getLlamadoExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getExpresionStringVacioAccess().getLlamadoExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getXAlternatives_0_0()); }
		(rule__OperadoresLogicosBooleanos__XAlternatives_0_0)
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getXAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__IzqAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getIzqExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getIzqExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getYAlternatives_2_0()); }
		(rule__OperadoresLogicosBooleanos__YAlternatives_2_0)
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getYAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperadoresLogicosBooleanos__DerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperadoresLogicosBooleanosAccess().getDerExpresionParserRuleCall_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getOperadoresLogicosBooleanosAccess().getDerExpresionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXAlternatives_0_0()); }
		(rule__OperacionesBooleanasDeComparacionAritmetica__XAlternatives_0_0)
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperacionesBooleanasDeComparacionAritmetica__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getOpOpCompParserRuleCall_1_0()); }
		ruleOpComp
		{ after(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getOpOpCompParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpNEG__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpNEGAccess().getExprExpresionParserRuleCall_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getOpNEGAccess().getExprExpresionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__IzqAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpCompAccess().getIzqExpresionParserRuleCall_0_0()); }
		ruleExpresion
		{ after(grammarAccess.getOpCompAccess().getIzqExpresionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComp__DerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpCompAccess().getDerExpresionParserRuleCall_2_0()); }
		ruleExpresion
		{ after(grammarAccess.getOpCompAccess().getDerExpresionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpresionBooleanaSimple__XAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionBooleanaSimpleAccess().getXAlternatives_0()); }
		(rule__ExpresionBooleanaSimple__XAlternatives_0)
		{ after(grammarAccess.getExpresionBooleanaSimpleAccess().getXAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
