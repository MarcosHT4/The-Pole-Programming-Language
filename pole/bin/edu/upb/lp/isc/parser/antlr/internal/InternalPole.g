/*
 * generated by Xtext 2.25.0
 */
grammar InternalPole;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.upb.lp.isc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.upb.lp.isc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.upb.lp.isc.services.PoleGrammarAccess;

}

@parser::members {

 	private PoleGrammarAccess grammarAccess;

    public InternalPoleParser(TokenStream input, PoleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programa";
   	}

   	@Override
   	protected PoleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePrograma
entryRulePrograma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramaRule()); }
	iv_rulePrograma=rulePrograma
	{ $current=$iv_rulePrograma.current; }
	EOF;

// Rule Programa
rulePrograma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProgramaAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProgramaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='PO'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramaAccess().getPOKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getEjEjecucionParserRuleCall_2_0());
				}
				lv_ej_2_0=ruleEjecucion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					set(
						$current,
						"ej",
						lv_ej_2_0,
						"edu.upb.lp.isc.Pole.Ejecucion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='LE'
		{
			newLeafNode(otherlv_3, grammarAccess.getProgramaAccess().getLEKeyword_3());
		}
	)
;

// Entry rule entryRuleEjecucion
entryRuleEjecucion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEjecucionRule()); }
	iv_ruleEjecucion=ruleEjecucion
	{ $current=$iv_ruleEjecucion.current; }
	EOF;

// Rule Ejecucion
ruleEjecucion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEjecucionAccess().getInstrInstruccionParserRuleCall_0());
			}
			lv_instr_0_0=ruleInstruccion
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEjecucionRule());
				}
				add(
					$current,
					"instr",
					lv_instr_0_0,
					"edu.upb.lp.isc.Pole.Instruccion");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleInstruccion
entryRuleInstruccion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstruccionRule()); }
	iv_ruleInstruccion=ruleInstruccion
	{ $current=$iv_ruleInstruccion.current; }
	EOF;

// Rule Instruccion
ruleInstruccion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getDeclVariablesParserRuleCall_0());
		}
		this_DeclVariables_0=ruleDeclVariables
		{
			$current = $this_DeclVariables_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getImprimirParserRuleCall_1());
		}
		this_Imprimir_1=ruleImprimir
		{
			$current = $this_Imprimir_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getCondicionalParserRuleCall_2());
		}
		this_Condicional_2=ruleCondicional
		{
			$current = $this_Condicional_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getSwitchParserRuleCall_3());
		}
		this_Switch_3=ruleSwitch
		{
			$current = $this_Switch_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getForParserRuleCall_4());
		}
		this_For_4=ruleFor
		{
			$current = $this_For_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getWhileParserRuleCall_5());
		}
		this_While_5=ruleWhile
		{
			$current = $this_While_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getDoWhileParserRuleCall_6());
		}
		this_DoWhile_6=ruleDoWhile
		{
			$current = $this_DoWhile_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getFuncionesParserRuleCall_7());
		}
		this_Funciones_7=ruleFunciones
		{
			$current = $this_Funciones_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getAsignacionVariableParserRuleCall_8());
		}
		this_AsignacionVariable_8=ruleAsignacionVariable
		{
			$current = $this_AsignacionVariable_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getLlamadoMetodoParserRuleCall_9());
		}
		this_LlamadoMetodo_9=ruleLlamadoMetodo
		{
			$current = $this_LlamadoMetodo_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstruccionAccess().getImprimirSinSaltoDeLineaParserRuleCall_10());
		}
		this_ImprimirSinSaltoDeLinea_10=ruleImprimirSinSaltoDeLinea
		{
			$current = $this_ImprimirSinSaltoDeLinea_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLlamadoMetodo
entryRuleLlamadoMetodo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLlamadoMetodoRule()); }
	iv_ruleLlamadoMetodo=ruleLlamadoMetodo
	{ $current=$iv_ruleLlamadoMetodo.current; }
	EOF;

// Rule LlamadoMetodo
ruleLlamadoMetodo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EYYOLVIDONA'
		{
			newLeafNode(otherlv_0, grammarAccess.getLlamadoMetodoAccess().getEYYOLVIDONAKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLlamadoMetodoRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getLlamadoMetodoAccess().getMethodFuncionesCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLlamadoMetodoAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='EY'
			{
				newLeafNode(otherlv_3, grammarAccess.getLlamadoMetodoAccess().getEYKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLlamadoMetodoAccess().getArgsExpresionParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLlamadoMetodoRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"edu.upb.lp.isc.Pole.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLlamadoMetodoAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleFunciones
entryRuleFunciones returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncionesRule()); }
	iv_ruleFunciones=ruleFunciones
	{ $current=$iv_ruleFunciones.current; }
	EOF;

// Rule Funciones
ruleFunciones returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OIGO'
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncionesAccess().getOIGOKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncionesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0());
				}
				lv_tipoDeDato_1_0=ruleTipoDeDato
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncionesRule());
					}
					set(
						$current,
						"tipoDeDato",
						lv_tipoDeDato_1_0,
						"edu.upb.lp.isc.Pole.TipoDeDato");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFuncionesAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncionesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='MUY'
			{
				newLeafNode(otherlv_3, grammarAccess.getFuncionesAccess().getMUYKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncionesAccess().getParamDeclVariables2ParserRuleCall_3_1_0());
					}
					lv_param_4_0=ruleDeclVariables2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncionesRule());
						}
						add(
							$current,
							"param",
							lv_param_4_0,
							"edu.upb.lp.isc.Pole.DeclVariables2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncionesAccess().getInstrInstruccionParserRuleCall_4_0());
				}
				lv_instr_5_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncionesRule());
					}
					add(
						$current,
						"instr",
						lv_instr_5_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6='PEROMUY'
			{
				newLeafNode(otherlv_6, grammarAccess.getFuncionesAccess().getPEROMUYKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncionesAccess().getEExpresionParserRuleCall_5_1_0());
					}
					lv_e_7_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncionesRule());
						}
						set(
							$current,
							"e",
							lv_e_7_0,
							"edu.upb.lp.isc.Pole.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='BORROSO'
		{
			newLeafNode(otherlv_8, grammarAccess.getFuncionesAccess().getBORROSOKeyword_6());
		}
	)
;

// Entry rule entryRuleImprimir
entryRuleImprimir returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImprimirRule()); }
	iv_ruleImprimir=ruleImprimir
	{ $current=$iv_ruleImprimir.current; }
	EOF;

// Rule Imprimir
ruleImprimir returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PARATICONDESPRECIO'
		{
			newLeafNode(otherlv_0, grammarAccess.getImprimirAccess().getPARATICONDESPRECIOKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImprimirAccess().getEExpresionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImprimirRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='@'
			{
				newLeafNode(otherlv_2, grammarAccess.getImprimirAccess().getCommercialAtKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImprimirAccess().getE1ExpresionParserRuleCall_2_1_0());
					}
					lv_e1_3_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImprimirRule());
						}
						add(
							$current,
							"e1",
							lv_e1_3_0,
							"edu.upb.lp.isc.Pole.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImprimirSinSaltoDeLinea
entryRuleImprimirSinSaltoDeLinea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImprimirSinSaltoDeLineaRule()); }
	iv_ruleImprimirSinSaltoDeLinea=ruleImprimirSinSaltoDeLinea
	{ $current=$iv_ruleImprimirSinSaltoDeLinea.current; }
	EOF;

// Rule ImprimirSinSaltoDeLinea
ruleImprimirSinSaltoDeLinea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PARATI'
		{
			newLeafNode(otherlv_0, grammarAccess.getImprimirSinSaltoDeLineaAccess().getPARATIKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImprimirSinSaltoDeLineaAccess().getEExpresionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImprimirSinSaltoDeLineaRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='@'
			{
				newLeafNode(otherlv_2, grammarAccess.getImprimirSinSaltoDeLineaAccess().getCommercialAtKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImprimirSinSaltoDeLineaAccess().getE1ExpresionParserRuleCall_2_1_0());
					}
					lv_e1_3_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImprimirSinSaltoDeLineaRule());
						}
						add(
							$current,
							"e1",
							lv_e1_3_0,
							"edu.upb.lp.isc.Pole.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCondicional
entryRuleCondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionalRule()); }
	iv_ruleCondicional=ruleCondicional
	{ $current=$iv_ruleCondicional.current; }
	EOF;

// Rule Condicional
ruleCondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GG?'
		{
			newLeafNode(otherlv_0, grammarAccess.getCondicionalAccess().getGGKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getExprExpresionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='WITHTEAM'
		{
			newLeafNode(otherlv_2, grammarAccess.getCondicionalAccess().getWITHTEAMKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getInstrInstruccionParserRuleCall_3_0());
				}
				lv_instr_3_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					add(
						$current,
						"instr",
						lv_instr_3_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getCasiTeamCondicionalElseIfParserRuleCall_4_0());
				}
				lv_casiTeam_4_0=ruleCondicionalElseIf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					add(
						$current,
						"casiTeam",
						lv_casiTeam_4_0,
						"edu.upb.lp.isc.Pole.CondicionalElseIf");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='NOTEAM'
			{
				newLeafNode(otherlv_5, grammarAccess.getCondicionalAccess().getNOTEAMKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCondicionalAccess().getInstrElseInstruccionParserRuleCall_5_1_0());
					}
					lv_instrElse_6_0=ruleInstruccion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCondicionalRule());
						}
						add(
							$current,
							"instrElse",
							lv_instrElse_6_0,
							"edu.upb.lp.isc.Pole.Instruccion");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_7='EZ'
		{
			newLeafNode(otherlv_7, grammarAccess.getCondicionalAccess().getEZKeyword_6());
		}
	)
;

// Entry rule entryRuleCondicionalElseIf
entryRuleCondicionalElseIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionalElseIfRule()); }
	iv_ruleCondicionalElseIf=ruleCondicionalElseIf
	{ $current=$iv_ruleCondicionalElseIf.current; }
	EOF;

// Rule CondicionalElseIf
ruleCondicionalElseIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CASITEAM'
		{
			newLeafNode(otherlv_0, grammarAccess.getCondicionalElseIfAccess().getCASITEAMKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalElseIfAccess().getExprELIFExpresionParserRuleCall_1_0());
				}
				lv_exprELIF_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalElseIfRule());
					}
					set(
						$current,
						"exprELIF",
						lv_exprELIF_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalElseIfAccess().getInstrELIFInstruccionParserRuleCall_2_0());
				}
				lv_instrELIF_2_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalElseIfRule());
					}
					add(
						$current,
						"instrELIF",
						lv_instrELIF_2_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSwitch
entryRuleSwitch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchRule()); }
	iv_ruleSwitch=ruleSwitch
	{ $current=$iv_ruleSwitch.current; }
	EOF;

// Rule Switch
ruleSwitch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchAccess().getVarLlamadoVariableParserRuleCall_0_0());
				}
				lv_var_0_0=ruleLlamadoVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchRule());
					}
					set(
						$current,
						"var",
						lv_var_0_0,
						"edu.upb.lp.isc.Pole.LlamadoVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='RULETARUSA?'
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchAccess().getRULETARUSAKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchAccess().getCaseCaseSwitchParserRuleCall_2_0());
				}
				lv_case_2_0=ruleCaseSwitch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchRule());
					}
					add(
						$current,
						"case",
						lv_case_2_0,
						"edu.upb.lp.isc.Pole.CaseSwitch");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='BOOM'
		{
			newLeafNode(otherlv_3, grammarAccess.getSwitchAccess().getBOOMKeyword_3());
		}
	)
;

// Entry rule entryRuleCaseSwitch
entryRuleCaseSwitch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseSwitchRule()); }
	iv_ruleCaseSwitch=ruleCaseSwitch
	{ $current=$iv_ruleCaseSwitch.current; }
	EOF;

// Rule CaseSwitch
ruleCaseSwitch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BALA'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseSwitchAccess().getBALAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseSwitchAccess().getEExpresionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseSwitchRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseSwitchAccess().getInstrInstruccionParserRuleCall_2_0());
				}
				lv_instr_2_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseSwitchRule());
					}
					add(
						$current,
						"instr",
						lv_instr_2_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFor
entryRuleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForRule()); }
	iv_ruleFor=ruleFor
	{ $current=$iv_ruleFor.current; }
	EOF;

// Rule For
ruleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CHOCO'
		{
			newLeafNode(otherlv_0, grammarAccess.getForAccess().getCHOCOKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getForAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getVarDeclVariablesParserRuleCall_2_0());
				}
				lv_var_2_0=ruleDeclVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"var",
						lv_var_2_0,
						"edu.upb.lp.isc.Pole.DeclVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='YVOLO'
		{
			newLeafNode(otherlv_3, grammarAccess.getForAccess().getYVOLOKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getExprExpresionBooleanaParserRuleCall_4_0());
				}
				lv_expr_4_0=ruleExpresionBooleana
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"expr",
						lv_expr_4_0,
						"edu.upb.lp.isc.Pole.ExpresionBooleana");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='YYOVOLE'
		{
			newLeafNode(otherlv_5, grammarAccess.getForAccess().getYYOVOLEKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getAsigAsignacionVariableParserRuleCall_6_0());
				}
				lv_asig_6_0=ruleAsignacionVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"asig",
						lv_asig_6_0,
						"edu.upb.lp.isc.Pole.AsignacionVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getInstrInstruccionParserRuleCall_7_0());
				}
				lv_instr_7_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					add(
						$current,
						"instr",
						lv_instr_7_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='YSEFUE'
		{
			newLeafNode(otherlv_8, grammarAccess.getForAccess().getYSEFUEKeyword_8());
		}
	)
;

// Entry rule entryRuleWhile
entryRuleWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileRule()); }
	iv_ruleWhile=ruleWhile
	{ $current=$iv_ruleWhile.current; }
	EOF;

// Rule While
ruleWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SA'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileAccess().getSAKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWhileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='MATAO'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileAccess().getMATAOKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getExprExpresionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getInstrInstruccionParserRuleCall_4_0());
				}
				lv_instr_4_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					add(
						$current,
						"instr",
						lv_instr_4_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='PACO'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhileAccess().getPACOKeyword_5());
		}
	)
;

// Entry rule entryRuleDoWhile
entryRuleDoWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoWhileRule()); }
	iv_ruleDoWhile=ruleDoWhile
	{ $current=$iv_ruleDoWhile.current; }
	EOF;

// Rule DoWhile
ruleDoWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AHITEVAMI'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoWhileAccess().getAHITEVAMIKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDoWhileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoWhileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDoWhileAccess().getInstrInstruccionParserRuleCall_2_0());
				}
				lv_instr_2_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoWhileRule());
					}
					add(
						$current,
						"instr",
						lv_instr_2_0,
						"edu.upb.lp.isc.Pole.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='DOLOR'
		{
			newLeafNode(otherlv_3, grammarAccess.getDoWhileAccess().getDOLORKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoWhileAccess().getExprExpresionParserRuleCall_4_0());
				}
				lv_expr_4_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoWhileRule());
					}
					set(
						$current,
						"expr",
						lv_expr_4_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclVariables
entryRuleDeclVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclVariablesRule()); }
	iv_ruleDeclVariables=ruleDeclVariables
	{ $current=$iv_ruleDeclVariables.current; }
	EOF;

// Rule DeclVariables
ruleDeclVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PEREMENNAYA'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclVariablesAccess().getPEREMENNAYAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclVariablesAccess().getTipoDeDatoTipoDeDatoParserRuleCall_1_0());
				}
				lv_tipoDeDato_1_0=ruleTipoDeDato
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclVariablesRule());
					}
					set(
						$current,
						"tipoDeDato",
						lv_tipoDeDato_1_0,
						"edu.upb.lp.isc.Pole.TipoDeDato");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDeclVariablesAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclVariablesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclVariablesAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclVariablesAccess().getValorExpresionParserRuleCall_4_0());
				}
				lv_valor_4_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclVariablesRule());
					}
					set(
						$current,
						"valor",
						lv_valor_4_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclVariables2
entryRuleDeclVariables2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclVariables2Rule()); }
	iv_ruleDeclVariables2=ruleDeclVariables2
	{ $current=$iv_ruleDeclVariables2.current; }
	EOF;

// Rule DeclVariables2
ruleDeclVariables2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclVariables2Access().getTipoDeDatoTipoDeDatoParserRuleCall_0_0());
				}
				lv_tipoDeDato_0_0=ruleTipoDeDato
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclVariables2Rule());
					}
					set(
						$current,
						"tipoDeDato",
						lv_tipoDeDato_0_0,
						"edu.upb.lp.isc.Pole.TipoDeDato");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDeclVariables2Access().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclVariables2Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAsignacionVariable
entryRuleAsignacionVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsignacionVariableRule()); }
	iv_ruleAsignacionVariable=ruleAsignacionVariable
	{ $current=$iv_ruleAsignacionVariable.current; }
	EOF;

// Rule AsignacionVariable
ruleAsignacionVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsignacionVariableRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAsignacionVariableAccess().getVariableDeclVariablesCrossReference_0_0());
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getAsignacionVariableAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAsignacionVariableAccess().getValorExpresionParserRuleCall_2_0());
				}
				lv_valor_2_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsignacionVariableRule());
					}
					set(
						$current,
						"valor",
						lv_valor_2_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTipoDeDato
entryRuleTipoDeDato returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTipoDeDatoRule()); }
	iv_ruleTipoDeDato=ruleTipoDeDato
	{ $current=$iv_ruleTipoDeDato.current.getText(); }
	EOF;

// Rule TipoDeDato
ruleTipoDeDato returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='DALAS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoDeDatoAccess().getDALASKeyword_0());
		}
		    |
		kw='MRBEAST'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoDeDatoAccess().getMRBEASTKeyword_1());
		}
		    |
		kw='XOKAS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoDeDatoAccess().getXOKASKeyword_2());
		}
		    |
		kw='YINYANG'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoDeDatoAccess().getYINYANGKeyword_3());
		}
		    |
		kw='MICORAZON'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoDeDatoAccess().getMICORAZONKeyword_4());
		}
	)
;

// Entry rule entryRuleExpresion
entryRuleExpresion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionRule()); }
	iv_ruleExpresion=ruleExpresion
	{ $current=$iv_ruleExpresion.current; }
	EOF;

// Rule Expresion
ruleExpresion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionDecimalParserRuleCall_0());
		}
		this_ExpresionDecimal_0=ruleExpresionDecimal
		{
			$current = $this_ExpresionDecimal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionStringParserRuleCall_1());
		}
		this_ExpresionString_1=ruleExpresionString
		{
			$current = $this_ExpresionString_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionBooleanaParserRuleCall_2());
		}
		this_ExpresionBooleana_2=ruleExpresionBooleana
		{
			$current = $this_ExpresionBooleana_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getLlamadoVariableParserRuleCall_3());
		}
		this_LlamadoVariable_3=ruleLlamadoVariable
		{
			$current = $this_LlamadoVariable_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getLlamadoFuncionParserRuleCall_4());
		}
		this_LlamadoFuncion_4=ruleLlamadoFuncion
		{
			$current = $this_LlamadoFuncion_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLlamadoVariable
entryRuleLlamadoVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLlamadoVariableRule()); }
	iv_ruleLlamadoVariable=ruleLlamadoVariable
	{ $current=$iv_ruleLlamadoVariable.current; }
	EOF;

// Rule LlamadoVariable
ruleLlamadoVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLlamadoVariableRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getLlamadoVariableAccess().getVariableDeclVariablesCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleLlamadoFuncion
entryRuleLlamadoFuncion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLlamadoFuncionRule()); }
	iv_ruleLlamadoFuncion=ruleLlamadoFuncion
	{ $current=$iv_ruleLlamadoFuncion.current; }
	EOF;

// Rule LlamadoFuncion
ruleLlamadoFuncion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EYYOLVIDONA'
		{
			newLeafNode(otherlv_0, grammarAccess.getLlamadoFuncionAccess().getEYYOLVIDONAKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLlamadoFuncionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getLlamadoFuncionAccess().getFuncFuncionesCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLlamadoFuncionAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='EY'
			{
				newLeafNode(otherlv_3, grammarAccess.getLlamadoFuncionAccess().getEYKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLlamadoFuncionAccess().getArgsExpresionParserRuleCall_3_1_0());
					}
					lv_args_4_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLlamadoFuncionRule());
						}
						add(
							$current,
							"args",
							lv_args_4_0,
							"edu.upb.lp.isc.Pole.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLlamadoFuncionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExpresionDecimal
entryRuleExpresionDecimal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionDecimalRule()); }
	iv_ruleExpresionDecimal=ruleExpresionDecimal
	{ $current=$iv_ruleExpresionDecimal.current; }
	EOF;

// Rule ExpresionDecimal
ruleExpresionDecimal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionDecimalAccess().getExpresionAritmeticaParserRuleCall_0());
		}
		this_ExpresionAritmetica_0=ruleExpresionAritmetica
		{
			$current = $this_ExpresionAritmetica_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleAritmeticaParserRuleCall_1());
		}
		this_ExpresionSimpleAritmetica_1=ruleExpresionSimpleAritmetica
		{
			$current = $this_ExpresionSimpleAritmetica_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionDecimalAccess().getExpresionSimpleXokasParserRuleCall_2());
		}
		this_ExpresionSimpleXokas_2=ruleExpresionSimpleXokas
		{
			$current = $this_ExpresionSimpleXokas_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionDecimalAccess().getExpresionLongitudStringParserRuleCall_3());
		}
		this_ExpresionLongitudString_3=ruleExpresionLongitudString
		{
			$current = $this_ExpresionLongitudString_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionDecimalAccess().getExpresionNegativoParserRuleCall_4());
		}
		this_ExpresionNegativo_4=ruleExpresionNegativo
		{
			$current = $this_ExpresionNegativo_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpresionNegativo
entryRuleExpresionNegativo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionNegativoRule()); }
	iv_ruleExpresionNegativo=ruleExpresionNegativo
	{ $current=$iv_ruleExpresionNegativo.current; }
	EOF;

// Rule ExpresionNegativo
ruleExpresionNegativo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionNegativoAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionNegativoAccess().getEExpresionParserRuleCall_1_0());
				}
				lv_e_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionNegativoRule());
					}
					set(
						$current,
						"e",
						lv_e_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionSimpleXokas
entryRuleExpresionSimpleXokas returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionSimpleXokasRule()); }
	iv_ruleExpresionSimpleXokas=ruleExpresionSimpleXokas
	{ $current=$iv_ruleExpresionSimpleXokas.current; }
	EOF;

// Rule ExpresionSimpleXokas
ruleExpresionSimpleXokas returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_x_0_0=RULE_INT
				{
					newLeafNode(lv_x_0_0, grammarAccess.getExpresionSimpleXokasAccess().getXINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpresionSimpleXokasRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionSimpleXokasAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_y_2_0=RULE_INT
				{
					newLeafNode(lv_y_2_0, grammarAccess.getExpresionSimpleXokasAccess().getYINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpresionSimpleXokasRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				otherlv_3='e'
				{
					newLeafNode(otherlv_3, grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_0());
				}
				    |
				otherlv_4='E'
				{
					newLeafNode(otherlv_4, grammarAccess.getExpresionSimpleXokasAccess().getEKeyword_3_0_1());
				}
			)
			(
				otherlv_5='-'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpresionSimpleXokasAccess().getHyphenMinusKeyword_3_1());
				}
			)?
			(
				(
					lv_z_6_0=RULE_INT
					{
						newLeafNode(lv_z_6_0, grammarAccess.getExpresionSimpleXokasAccess().getZINTTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpresionSimpleXokasRule());
						}
						setWithLastConsumed(
							$current,
							"z",
							lv_z_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpresionSimpleAritmetica
entryRuleExpresionSimpleAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionSimpleAritmeticaRule()); }
	iv_ruleExpresionSimpleAritmetica=ruleExpresionSimpleAritmetica
	{ $current=$iv_ruleExpresionSimpleAritmetica.current; }
	EOF;

// Rule ExpresionSimpleAritmetica
ruleExpresionSimpleAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0=RULE_INT
			{
				newLeafNode(lv_x_0_0, grammarAccess.getExpresionSimpleAritmeticaAccess().getXINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpresionSimpleAritmeticaRule());
				}
				setWithLastConsumed(
					$current,
					"x",
					lv_x_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleExpresionLongitudString
entryRuleExpresionLongitudString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionLongitudStringRule()); }
	iv_ruleExpresionLongitudString=ruleExpresionLongitudString
	{ $current=$iv_ruleExpresionLongitudString.current; }
	EOF;

// Rule ExpresionLongitudString
ruleExpresionLongitudString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='KGRANDE'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionLongitudStringAccess().getKGRANDEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionLongitudStringAccess().getLlamadoExpresionParserRuleCall_1_0());
				}
				lv_llamado_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionLongitudStringRule());
					}
					set(
						$current,
						"llamado",
						lv_llamado_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionAritmetica
entryRuleExpresionAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionAritmeticaRule()); }
	iv_ruleExpresionAritmetica=ruleExpresionAritmetica
	{ $current=$iv_ruleExpresionAritmetica.current; }
	EOF;

// Rule ExpresionAritmetica
ruleExpresionAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getSumaParserRuleCall_0());
		}
		this_Suma_0=ruleSuma
		{
			$current = $this_Suma_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getRestaParserRuleCall_1());
		}
		this_Resta_1=ruleResta
		{
			$current = $this_Resta_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getMultiplicacionParserRuleCall_2());
		}
		this_Multiplicacion_2=ruleMultiplicacion
		{
			$current = $this_Multiplicacion_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getDivisionParserRuleCall_3());
		}
		this_Division_3=ruleDivision
		{
			$current = $this_Division_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getModuloParserRuleCall_4());
		}
		this_Modulo_4=ruleModulo
		{
			$current = $this_Modulo_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSuma
entryRuleSuma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumaRule()); }
	iv_ruleSuma=ruleSuma
	{ $current=$iv_ruleSuma.current; }
	EOF;

// Rule Suma
ruleSuma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SUMA'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumaAccess().getSUMAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSumaAccess().getOpOperacionParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOperacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumaRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.Operacion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleResta
entryRuleResta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestaRule()); }
	iv_ruleResta=ruleResta
	{ $current=$iv_ruleResta.current; }
	EOF;

// Rule Resta
ruleResta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RESTA'
		{
			newLeafNode(otherlv_0, grammarAccess.getRestaAccess().getRESTAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestaAccess().getOpOperacionParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOperacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestaRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.Operacion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiplicacion
entryRuleMultiplicacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicacionRule()); }
	iv_ruleMultiplicacion=ruleMultiplicacion
	{ $current=$iv_ruleMultiplicacion.current; }
	EOF;

// Rule Multiplicacion
ruleMultiplicacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MULTIPLICACION'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultiplicacionAccess().getMULTIPLICACIONKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicacionAccess().getOpOperacionParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOperacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicacionRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.Operacion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDivision
entryRuleDivision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivisionRule()); }
	iv_ruleDivision=ruleDivision
	{ $current=$iv_ruleDivision.current; }
	EOF;

// Rule Division
ruleDivision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DIVISION'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivisionAccess().getDIVISIONKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivisionAccess().getOpOperacionParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOperacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivisionRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.Operacion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModulo
entryRuleModulo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuloRule()); }
	iv_ruleModulo=ruleModulo
	{ $current=$iv_ruleModulo.current; }
	EOF;

// Rule Modulo
ruleModulo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MODULO'
		{
			newLeafNode(otherlv_0, grammarAccess.getModuloAccess().getMODULOKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuloAccess().getOpOperacionParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOperacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuloRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.Operacion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperacion
entryRuleOperacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperacionRule()); }
	iv_ruleOperacion=ruleOperacion
	{ $current=$iv_ruleOperacion.current; }
	EOF;

// Rule Operacion
ruleOperacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JULIOPROFE'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperacionAccess().getJULIOPROFEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionAccess().getIzqExpresionParserRuleCall_1_0());
				}
				lv_izq_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionRule());
					}
					set(
						$current,
						"izq",
						lv_izq_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='Y'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperacionAccess().getYKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionAccess().getDerExpresionParserRuleCall_3_0());
				}
				lv_der_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionRule());
					}
					set(
						$current,
						"der",
						lv_der_3_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionString
entryRuleExpresionString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionStringRule()); }
	iv_ruleExpresionString=ruleExpresionString
	{ $current=$iv_ruleExpresionString.current; }
	EOF;

// Rule ExpresionString
ruleExpresionString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionStringAccess().getExpresionConcatenacionParserRuleCall_0());
		}
		this_ExpresionConcatenacion_0=ruleExpresionConcatenacion
		{
			$current = $this_ExpresionConcatenacion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionStringAccess().getExpresionSimpleStringParserRuleCall_1());
		}
		this_ExpresionSimpleString_1=ruleExpresionSimpleString
		{
			$current = $this_ExpresionSimpleString_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpresionSimpleString
entryRuleExpresionSimpleString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionSimpleStringRule()); }
	iv_ruleExpresionSimpleString=ruleExpresionSimpleString
	{ $current=$iv_ruleExpresionSimpleString.current; }
	EOF;

// Rule ExpresionSimpleString
ruleExpresionSimpleString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0=RULE_STRING
			{
				newLeafNode(lv_x_0_0, grammarAccess.getExpresionSimpleStringAccess().getXSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExpresionSimpleStringRule());
				}
				setWithLastConsumed(
					$current,
					"x",
					lv_x_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleExpresionConcatenacion
entryRuleExpresionConcatenacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionConcatenacionRule()); }
	iv_ruleExpresionConcatenacion=ruleExpresionConcatenacion
	{ $current=$iv_ruleExpresionConcatenacion.current; }
	EOF;

// Rule ExpresionConcatenacion
ruleExpresionConcatenacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LA'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionConcatenacionAccess().getLAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionConcatenacionAccess().getPrimeroExpresionParserRuleCall_1_0());
				}
				lv_primero_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionConcatenacionRule());
					}
					set(
						$current,
						"primero",
						lv_primero_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='GOTITA'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpresionConcatenacionAccess().getGOTITAKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionConcatenacionAccess().getSegundoExpresionParserRuleCall_3_0());
				}
				lv_segundo_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionConcatenacionRule());
					}
					set(
						$current,
						"segundo",
						lv_segundo_3_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionBooleana
entryRuleExpresionBooleana returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionBooleanaRule()); }
	iv_ruleExpresionBooleana=ruleExpresionBooleana
	{ $current=$iv_ruleExpresionBooleana.current; }
	EOF;

// Rule ExpresionBooleana
ruleExpresionBooleana returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionBooleanaAccess().getExpresionOperacionesBooleanasParserRuleCall_0());
		}
		this_ExpresionOperacionesBooleanas_0=ruleExpresionOperacionesBooleanas
		{
			$current = $this_ExpresionOperacionesBooleanas_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionBooleanaAccess().getExpresionBooleanaSimpleParserRuleCall_1());
		}
		this_ExpresionBooleanaSimple_1=ruleExpresionBooleanaSimple
		{
			$current = $this_ExpresionBooleanaSimple_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpresionOperacionesBooleanas
entryRuleExpresionOperacionesBooleanas returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasRule()); }
	iv_ruleExpresionOperacionesBooleanas=ruleExpresionOperacionesBooleanas
	{ $current=$iv_ruleExpresionOperacionesBooleanas.current; }
	EOF;

// Rule ExpresionOperacionesBooleanas
ruleExpresionOperacionesBooleanas returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionParserRuleCall_0());
		}
		this_OperacionesBooleanasDeComparacion_0=ruleOperacionesBooleanasDeComparacion
		{
			$current = $this_OperacionesBooleanasDeComparacion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperacionesBooleanasDeComparacionAritmeticaParserRuleCall_1());
		}
		this_OperacionesBooleanasDeComparacionAritmetica_1=ruleOperacionesBooleanasDeComparacionAritmetica
		{
			$current = $this_OperacionesBooleanasDeComparacionAritmetica_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasAccess().getOperadoresLogicosBooleanosParserRuleCall_2());
		}
		this_OperadoresLogicosBooleanos_2=ruleOperadoresLogicosBooleanos
		{
			$current = $this_OperadoresLogicosBooleanos_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasAccess().getOpNEGParserRuleCall_3());
		}
		this_OpNEG_3=ruleOpNEG
		{
			$current = $this_OpNEG_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionOperacionesBooleanasAccess().getExpresionStringVacioParserRuleCall_4());
		}
		this_ExpresionStringVacio_4=ruleExpresionStringVacio
		{
			$current = $this_ExpresionStringVacio_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperacionesBooleanasDeComparacion
entryRuleOperacionesBooleanasDeComparacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperacionesBooleanasDeComparacionRule()); }
	iv_ruleOperacionesBooleanasDeComparacion=ruleOperacionesBooleanasDeComparacion
	{ $current=$iv_ruleOperacionesBooleanasDeComparacion.current; }
	EOF;

// Rule OperacionesBooleanasDeComparacion
ruleOperacionesBooleanasDeComparacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_x_0_1='POXI'
					{
						newLeafNode(lv_x_0_1, grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXPOXIKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_1, null);
					}
					    |
					lv_x_0_2='AGUA'
					{
						newLeafNode(lv_x_0_2, grammarAccess.getOperacionesBooleanasDeComparacionAccess().getXAGUAKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getIzqExpresionParserRuleCall_1_0());
				}
				lv_izq_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionesBooleanasDeComparacionRule());
					}
					set(
						$current,
						"izq",
						lv_izq_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_y_2_1='POL'
					{
						newLeafNode(lv_y_2_1, grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYPOLKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionRule());
						}
						setWithLastConsumed($current, "y", lv_y_2_1, null);
					}
					    |
					lv_y_2_2='RRAS'
					{
						newLeafNode(lv_y_2_2, grammarAccess.getOperacionesBooleanasDeComparacionAccess().getYRRASKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionRule());
						}
						setWithLastConsumed($current, "y", lv_y_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionesBooleanasDeComparacionAccess().getDerExpresionParserRuleCall_3_0());
				}
				lv_der_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionesBooleanasDeComparacionRule());
					}
					set(
						$current,
						"der",
						lv_der_3_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionStringVacio
entryRuleExpresionStringVacio returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionStringVacioRule()); }
	iv_ruleExpresionStringVacio=ruleExpresionStringVacio
	{ $current=$iv_ruleExpresionStringVacio.current; }
	EOF;

// Rule ExpresionStringVacio
ruleExpresionStringVacio returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MIBILLETERA'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionStringVacioAccess().getMIBILLETERAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionStringVacioAccess().getLlamadoExpresionParserRuleCall_1_0());
				}
				lv_llamado_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionStringVacioRule());
					}
					set(
						$current,
						"llamado",
						lv_llamado_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperadoresLogicosBooleanos
entryRuleOperadoresLogicosBooleanos returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperadoresLogicosBooleanosRule()); }
	iv_ruleOperadoresLogicosBooleanos=ruleOperadoresLogicosBooleanos
	{ $current=$iv_ruleOperadoresLogicosBooleanos.current; }
	EOF;

// Rule OperadoresLogicosBooleanos
ruleOperadoresLogicosBooleanos returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_x_0_1='PEPE'
					{
						newLeafNode(lv_x_0_1, grammarAccess.getOperadoresLogicosBooleanosAccess().getXPEPEKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_1, null);
					}
					    |
					lv_x_0_2='NAR'
					{
						newLeafNode(lv_x_0_2, grammarAccess.getOperadoresLogicosBooleanosAccess().getXNARKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_2, null);
					}
					    |
					lv_x_0_3='XO'
					{
						newLeafNode(lv_x_0_3, grammarAccess.getOperadoresLogicosBooleanosAccess().getXXOKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperadoresLogicosBooleanosAccess().getIzqExpresionParserRuleCall_1_0());
				}
				lv_izq_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperadoresLogicosBooleanosRule());
					}
					set(
						$current,
						"izq",
						lv_izq_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_y_2_1='PANDA'
					{
						newLeafNode(lv_y_2_1, grammarAccess.getOperadoresLogicosBooleanosAccess().getYPANDAKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "y", lv_y_2_1, null);
					}
					    |
					lv_y_2_2='ANJA'
					{
						newLeafNode(lv_y_2_2, grammarAccess.getOperadoresLogicosBooleanosAccess().getYANJAKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "y", lv_y_2_2, null);
					}
					    |
					lv_y_2_3='R'
					{
						newLeafNode(lv_y_2_3, grammarAccess.getOperadoresLogicosBooleanosAccess().getYRKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperadoresLogicosBooleanosRule());
						}
						setWithLastConsumed($current, "y", lv_y_2_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperadoresLogicosBooleanosAccess().getDerExpresionParserRuleCall_3_0());
				}
				lv_der_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperadoresLogicosBooleanosRule());
					}
					set(
						$current,
						"der",
						lv_der_3_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperacionesBooleanasDeComparacionAritmetica
entryRuleOperacionesBooleanasDeComparacionAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule()); }
	iv_ruleOperacionesBooleanasDeComparacionAritmetica=ruleOperacionesBooleanasDeComparacionAritmetica
	{ $current=$iv_ruleOperacionesBooleanasDeComparacionAritmetica.current; }
	EOF;

// Rule OperacionesBooleanasDeComparacionAritmetica
ruleOperacionesBooleanasDeComparacionAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_x_0_1='LEGAL'
					{
						newLeafNode(lv_x_0_1, grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXLEGALKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_1, null);
					}
					    |
					lv_x_0_2='ILEGAL'
					{
						newLeafNode(lv_x_0_2, grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXILEGALKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_2, null);
					}
					    |
					lv_x_0_3='ALEGAL'
					{
						newLeafNode(lv_x_0_3, grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXALEGALKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_3, null);
					}
					    |
					lv_x_0_4='ANTILEGAL'
					{
						newLeafNode(lv_x_0_4, grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getXANTILEGALKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule());
						}
						setWithLastConsumed($current, "x", lv_x_0_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaAccess().getOpOpCompParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOpComp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionesBooleanasDeComparacionAritmeticaRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"edu.upb.lp.isc.Pole.OpComp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOpNEG
entryRuleOpNEG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpNEGRule()); }
	iv_ruleOpNEG=ruleOpNEG
	{ $current=$iv_ruleOpNEG.current; }
	EOF;

// Rule OpNEG
ruleOpNEG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ALVERRES'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpNEGAccess().getALVERRESKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpNEGAccess().getExprExpresionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpNEGRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOpComp
entryRuleOpComp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpCompRule()); }
	iv_ruleOpComp=ruleOpComp
	{ $current=$iv_ruleOpComp.current; }
	EOF;

// Rule OpComp
ruleOpComp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOpCompAccess().getIzqExpresionParserRuleCall_0_0());
				}
				lv_izq_0_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpCompRule());
					}
					set(
						$current,
						"izq",
						lv_izq_0_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='CON'
		{
			newLeafNode(otherlv_1, grammarAccess.getOpCompAccess().getCONKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOpCompAccess().getDerExpresionParserRuleCall_2_0());
				}
				lv_der_2_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOpCompRule());
					}
					set(
						$current,
						"der",
						lv_der_2_0,
						"edu.upb.lp.isc.Pole.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpresionBooleanaSimple
entryRuleExpresionBooleanaSimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionBooleanaSimpleRule()); }
	iv_ruleExpresionBooleanaSimple=ruleExpresionBooleanaSimple
	{ $current=$iv_ruleExpresionBooleanaSimple.current; }
	EOF;

// Rule ExpresionBooleanaSimple
ruleExpresionBooleanaSimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_x_0_1='YIN'
				{
					newLeafNode(lv_x_0_1, grammarAccess.getExpresionBooleanaSimpleAccess().getXYINKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpresionBooleanaSimpleRule());
					}
					setWithLastConsumed($current, "x", lv_x_0_1, null);
				}
				    |
				lv_x_0_2='YANG'
				{
					newLeafNode(lv_x_0_2, grammarAccess.getExpresionBooleanaSimpleAccess().getXYANGKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpresionBooleanaSimpleRule());
					}
					setWithLastConsumed($current, "x", lv_x_0_2, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
