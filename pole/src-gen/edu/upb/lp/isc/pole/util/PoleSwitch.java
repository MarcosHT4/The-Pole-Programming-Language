/**
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.pole.util;

import edu.upb.lp.isc.pole.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see edu.upb.lp.isc.pole.PolePackage
 * @generated
 */
public class PoleSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PolePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PoleSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = PolePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case PolePackage.PROGRAMA:
      {
        Programa programa = (Programa)theEObject;
        T result = casePrograma(programa);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EJECUCION:
      {
        Ejecucion ejecucion = (Ejecucion)theEObject;
        T result = caseEjecucion(ejecucion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.INSTRUCCION:
      {
        Instruccion instruccion = (Instruccion)theEObject;
        T result = caseInstruccion(instruccion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.LLAMADO_METODO:
      {
        LlamadoMetodo llamadoMetodo = (LlamadoMetodo)theEObject;
        T result = caseLlamadoMetodo(llamadoMetodo);
        if (result == null) result = caseInstruccion(llamadoMetodo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.FUNCIONES:
      {
        Funciones funciones = (Funciones)theEObject;
        T result = caseFunciones(funciones);
        if (result == null) result = caseInstruccion(funciones);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.IMPRIMIR:
      {
        Imprimir imprimir = (Imprimir)theEObject;
        T result = caseImprimir(imprimir);
        if (result == null) result = caseInstruccion(imprimir);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.IMPRIMIR_SIN_SALTO_DE_LINEA:
      {
        ImprimirSinSaltoDeLinea imprimirSinSaltoDeLinea = (ImprimirSinSaltoDeLinea)theEObject;
        T result = caseImprimirSinSaltoDeLinea(imprimirSinSaltoDeLinea);
        if (result == null) result = caseInstruccion(imprimirSinSaltoDeLinea);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.CONDICIONAL:
      {
        Condicional condicional = (Condicional)theEObject;
        T result = caseCondicional(condicional);
        if (result == null) result = caseInstruccion(condicional);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.CONDICIONAL_ELSE_IF:
      {
        CondicionalElseIf condicionalElseIf = (CondicionalElseIf)theEObject;
        T result = caseCondicionalElseIf(condicionalElseIf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.SWITCH:
      {
        edu.upb.lp.isc.pole.Switch switch_ = (edu.upb.lp.isc.pole.Switch)theEObject;
        T result = caseSwitch(switch_);
        if (result == null) result = caseInstruccion(switch_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.CASE_SWITCH:
      {
        CaseSwitch caseSwitch = (CaseSwitch)theEObject;
        T result = caseCaseSwitch(caseSwitch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.FOR:
      {
        For for_ = (For)theEObject;
        T result = caseFor(for_);
        if (result == null) result = caseInstruccion(for_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.WHILE:
      {
        While while_ = (While)theEObject;
        T result = caseWhile(while_);
        if (result == null) result = caseInstruccion(while_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.DO_WHILE:
      {
        DoWhile doWhile = (DoWhile)theEObject;
        T result = caseDoWhile(doWhile);
        if (result == null) result = caseInstruccion(doWhile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.DECL_VARIABLES:
      {
        DeclVariables declVariables = (DeclVariables)theEObject;
        T result = caseDeclVariables(declVariables);
        if (result == null) result = caseInstruccion(declVariables);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.ASIGNACION_VARIABLE:
      {
        AsignacionVariable asignacionVariable = (AsignacionVariable)theEObject;
        T result = caseAsignacionVariable(asignacionVariable);
        if (result == null) result = caseInstruccion(asignacionVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION:
      {
        Expresion expresion = (Expresion)theEObject;
        T result = caseExpresion(expresion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.LLAMADO_VARIABLE:
      {
        LlamadoVariable llamadoVariable = (LlamadoVariable)theEObject;
        T result = caseLlamadoVariable(llamadoVariable);
        if (result == null) result = caseExpresion(llamadoVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.LLAMADO_FUNCION:
      {
        LlamadoFuncion llamadoFuncion = (LlamadoFuncion)theEObject;
        T result = caseLlamadoFuncion(llamadoFuncion);
        if (result == null) result = caseExpresion(llamadoFuncion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_DECIMAL:
      {
        ExpresionDecimal expresionDecimal = (ExpresionDecimal)theEObject;
        T result = caseExpresionDecimal(expresionDecimal);
        if (result == null) result = caseExpresion(expresionDecimal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_NEGATIVO:
      {
        ExpresionNegativo expresionNegativo = (ExpresionNegativo)theEObject;
        T result = caseExpresionNegativo(expresionNegativo);
        if (result == null) result = caseExpresionDecimal(expresionNegativo);
        if (result == null) result = caseExpresion(expresionNegativo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_SIMPLE_XOKAS:
      {
        ExpresionSimpleXokas expresionSimpleXokas = (ExpresionSimpleXokas)theEObject;
        T result = caseExpresionSimpleXokas(expresionSimpleXokas);
        if (result == null) result = caseExpresionDecimal(expresionSimpleXokas);
        if (result == null) result = caseExpresion(expresionSimpleXokas);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_SIMPLE_ARITMETICA:
      {
        ExpresionSimpleAritmetica expresionSimpleAritmetica = (ExpresionSimpleAritmetica)theEObject;
        T result = caseExpresionSimpleAritmetica(expresionSimpleAritmetica);
        if (result == null) result = caseExpresionDecimal(expresionSimpleAritmetica);
        if (result == null) result = caseExpresion(expresionSimpleAritmetica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_LONGITUD_STRING:
      {
        ExpresionLongitudString expresionLongitudString = (ExpresionLongitudString)theEObject;
        T result = caseExpresionLongitudString(expresionLongitudString);
        if (result == null) result = caseExpresionDecimal(expresionLongitudString);
        if (result == null) result = caseExpresion(expresionLongitudString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_ARITMETICA:
      {
        ExpresionAritmetica expresionAritmetica = (ExpresionAritmetica)theEObject;
        T result = caseExpresionAritmetica(expresionAritmetica);
        if (result == null) result = caseExpresionDecimal(expresionAritmetica);
        if (result == null) result = caseExpresion(expresionAritmetica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.SUMA:
      {
        Suma suma = (Suma)theEObject;
        T result = caseSuma(suma);
        if (result == null) result = caseExpresionAritmetica(suma);
        if (result == null) result = caseExpresionDecimal(suma);
        if (result == null) result = caseExpresion(suma);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.RESTA:
      {
        Resta resta = (Resta)theEObject;
        T result = caseResta(resta);
        if (result == null) result = caseExpresionAritmetica(resta);
        if (result == null) result = caseExpresionDecimal(resta);
        if (result == null) result = caseExpresion(resta);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.MULTIPLICACION:
      {
        Multiplicacion multiplicacion = (Multiplicacion)theEObject;
        T result = caseMultiplicacion(multiplicacion);
        if (result == null) result = caseExpresionAritmetica(multiplicacion);
        if (result == null) result = caseExpresionDecimal(multiplicacion);
        if (result == null) result = caseExpresion(multiplicacion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.DIVISION:
      {
        Division division = (Division)theEObject;
        T result = caseDivision(division);
        if (result == null) result = caseExpresionAritmetica(division);
        if (result == null) result = caseExpresionDecimal(division);
        if (result == null) result = caseExpresion(division);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.MODULO:
      {
        Modulo modulo = (Modulo)theEObject;
        T result = caseModulo(modulo);
        if (result == null) result = caseExpresionAritmetica(modulo);
        if (result == null) result = caseExpresionDecimal(modulo);
        if (result == null) result = caseExpresion(modulo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OPERACION:
      {
        Operacion operacion = (Operacion)theEObject;
        T result = caseOperacion(operacion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_STRING:
      {
        ExpresionString expresionString = (ExpresionString)theEObject;
        T result = caseExpresionString(expresionString);
        if (result == null) result = caseExpresion(expresionString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_SIMPLE_STRING:
      {
        ExpresionSimpleString expresionSimpleString = (ExpresionSimpleString)theEObject;
        T result = caseExpresionSimpleString(expresionSimpleString);
        if (result == null) result = caseExpresionString(expresionSimpleString);
        if (result == null) result = caseExpresion(expresionSimpleString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_CONCATENACION:
      {
        ExpresionConcatenacion expresionConcatenacion = (ExpresionConcatenacion)theEObject;
        T result = caseExpresionConcatenacion(expresionConcatenacion);
        if (result == null) result = caseExpresionString(expresionConcatenacion);
        if (result == null) result = caseExpresion(expresionConcatenacion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_BOOLEANA:
      {
        ExpresionBooleana expresionBooleana = (ExpresionBooleana)theEObject;
        T result = caseExpresionBooleana(expresionBooleana);
        if (result == null) result = caseExpresion(expresionBooleana);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_OPERACIONES_BOOLEANAS:
      {
        ExpresionOperacionesBooleanas expresionOperacionesBooleanas = (ExpresionOperacionesBooleanas)theEObject;
        T result = caseExpresionOperacionesBooleanas(expresionOperacionesBooleanas);
        if (result == null) result = caseExpresionBooleana(expresionOperacionesBooleanas);
        if (result == null) result = caseExpresion(expresionOperacionesBooleanas);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION:
      {
        OperacionesBooleanasDeComparacion operacionesBooleanasDeComparacion = (OperacionesBooleanasDeComparacion)theEObject;
        T result = caseOperacionesBooleanasDeComparacion(operacionesBooleanasDeComparacion);
        if (result == null) result = caseExpresionOperacionesBooleanas(operacionesBooleanasDeComparacion);
        if (result == null) result = caseExpresionBooleana(operacionesBooleanasDeComparacion);
        if (result == null) result = caseExpresion(operacionesBooleanasDeComparacion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_STRING_VACIO:
      {
        ExpresionStringVacio expresionStringVacio = (ExpresionStringVacio)theEObject;
        T result = caseExpresionStringVacio(expresionStringVacio);
        if (result == null) result = caseExpresionOperacionesBooleanas(expresionStringVacio);
        if (result == null) result = caseExpresionBooleana(expresionStringVacio);
        if (result == null) result = caseExpresion(expresionStringVacio);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OPERADORES_LOGICOS_BOOLEANOS:
      {
        OperadoresLogicosBooleanos operadoresLogicosBooleanos = (OperadoresLogicosBooleanos)theEObject;
        T result = caseOperadoresLogicosBooleanos(operadoresLogicosBooleanos);
        if (result == null) result = caseExpresionOperacionesBooleanas(operadoresLogicosBooleanos);
        if (result == null) result = caseExpresionBooleana(operadoresLogicosBooleanos);
        if (result == null) result = caseExpresion(operadoresLogicosBooleanos);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION_ARITMETICA:
      {
        OperacionesBooleanasDeComparacionAritmetica operacionesBooleanasDeComparacionAritmetica = (OperacionesBooleanasDeComparacionAritmetica)theEObject;
        T result = caseOperacionesBooleanasDeComparacionAritmetica(operacionesBooleanasDeComparacionAritmetica);
        if (result == null) result = caseExpresionOperacionesBooleanas(operacionesBooleanasDeComparacionAritmetica);
        if (result == null) result = caseExpresionBooleana(operacionesBooleanasDeComparacionAritmetica);
        if (result == null) result = caseExpresion(operacionesBooleanasDeComparacionAritmetica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OP_NEG:
      {
        OpNEG opNEG = (OpNEG)theEObject;
        T result = caseOpNEG(opNEG);
        if (result == null) result = caseExpresionOperacionesBooleanas(opNEG);
        if (result == null) result = caseExpresionBooleana(opNEG);
        if (result == null) result = caseExpresion(opNEG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.OP_COMP:
      {
        OpComp opComp = (OpComp)theEObject;
        T result = caseOpComp(opComp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PolePackage.EXPRESION_BOOLEANA_SIMPLE:
      {
        ExpresionBooleanaSimple expresionBooleanaSimple = (ExpresionBooleanaSimple)theEObject;
        T result = caseExpresionBooleanaSimple(expresionBooleanaSimple);
        if (result == null) result = caseExpresionBooleana(expresionBooleanaSimple);
        if (result == null) result = caseExpresion(expresionBooleanaSimple);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programa</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programa</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrograma(Programa object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ejecucion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ejecucion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEjecucion(Ejecucion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Instruccion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Instruccion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInstruccion(Instruccion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Llamado Metodo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Llamado Metodo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLlamadoMetodo(LlamadoMetodo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Funciones</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Funciones</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunciones(Funciones object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imprimir</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imprimir</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImprimir(Imprimir object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imprimir Sin Salto De Linea</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imprimir Sin Salto De Linea</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImprimirSinSaltoDeLinea(ImprimirSinSaltoDeLinea object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condicional</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condicional</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCondicional(Condicional object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condicional Else If</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condicional Else If</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCondicionalElseIf(CondicionalElseIf object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Switch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Switch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSwitch(edu.upb.lp.isc.pole.Switch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Case Switch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Case Switch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCaseSwitch(CaseSwitch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFor(For object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>While</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>While</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWhile(While object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Do While</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Do While</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDoWhile(DoWhile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Decl Variables</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Decl Variables</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclVariables(DeclVariables object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Asignacion Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Asignacion Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAsignacionVariable(AsignacionVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresion(Expresion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Llamado Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Llamado Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLlamadoVariable(LlamadoVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Llamado Funcion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Llamado Funcion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLlamadoFuncion(LlamadoFuncion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Decimal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Decimal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionDecimal(ExpresionDecimal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Negativo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Negativo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionNegativo(ExpresionNegativo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Simple Xokas</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Simple Xokas</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionSimpleXokas(ExpresionSimpleXokas object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Simple Aritmetica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Simple Aritmetica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionSimpleAritmetica(ExpresionSimpleAritmetica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Longitud String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Longitud String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionLongitudString(ExpresionLongitudString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Aritmetica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Aritmetica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionAritmetica(ExpresionAritmetica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Suma</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Suma</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSuma(Suma object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resta</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resta</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResta(Resta object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multiplicacion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multiplicacion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiplicacion(Multiplicacion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Division</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Division</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDivision(Division object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Modulo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Modulo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModulo(Modulo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operacion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operacion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperacion(Operacion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionString(ExpresionString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Simple String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Simple String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionSimpleString(ExpresionSimpleString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Concatenacion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Concatenacion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionConcatenacion(ExpresionConcatenacion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Booleana</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Booleana</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionBooleana(ExpresionBooleana object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Operaciones Booleanas</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Operaciones Booleanas</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionOperacionesBooleanas(ExpresionOperacionesBooleanas object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operaciones Booleanas De Comparacion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operaciones Booleanas De Comparacion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperacionesBooleanasDeComparacion(OperacionesBooleanasDeComparacion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion String Vacio</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion String Vacio</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionStringVacio(ExpresionStringVacio object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operadores Logicos Booleanos</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operadores Logicos Booleanos</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperadoresLogicosBooleanos(OperadoresLogicosBooleanos object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operaciones Booleanas De Comparacion Aritmetica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operaciones Booleanas De Comparacion Aritmetica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperacionesBooleanasDeComparacionAritmetica(OperacionesBooleanasDeComparacionAritmetica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Op NEG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Op NEG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpNEG(OpNEG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Op Comp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Op Comp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOpComp(OpComp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expresion Booleana Simple</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expresion Booleana Simple</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpresionBooleanaSimple(ExpresionBooleanaSimple object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //PoleSwitch
