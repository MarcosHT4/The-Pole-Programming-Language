/**
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.pole.impl;

import edu.upb.lp.isc.pole.Expresion;
import edu.upb.lp.isc.pole.OperacionesBooleanasDeComparacion;
import edu.upb.lp.isc.pole.PolePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operaciones Booleanas De Comparacion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.pole.impl.OperacionesBooleanasDeComparacionImpl#getX <em>X</em>}</li>
 *   <li>{@link edu.upb.lp.isc.pole.impl.OperacionesBooleanasDeComparacionImpl#getIzq <em>Izq</em>}</li>
 *   <li>{@link edu.upb.lp.isc.pole.impl.OperacionesBooleanasDeComparacionImpl#getY <em>Y</em>}</li>
 *   <li>{@link edu.upb.lp.isc.pole.impl.OperacionesBooleanasDeComparacionImpl#getDer <em>Der</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OperacionesBooleanasDeComparacionImpl extends ExpresionOperacionesBooleanasImpl implements OperacionesBooleanasDeComparacion
{
  /**
   * The default value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected static final String X_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected String x = X_EDEFAULT;

  /**
   * The cached value of the '{@link #getIzq() <em>Izq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIzq()
   * @generated
   * @ordered
   */
  protected Expresion izq;

  /**
   * The default value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected static final String Y_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected String y = Y_EDEFAULT;

  /**
   * The cached value of the '{@link #getDer() <em>Der</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDer()
   * @generated
   * @ordered
   */
  protected Expresion der;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperacionesBooleanasDeComparacionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PolePackage.Literals.OPERACIONES_BOOLEANAS_DE_COMPARACION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setX(String newX)
  {
    String oldX = x;
    x = newX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__X, oldX, x));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expresion getIzq()
  {
    return izq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIzq(Expresion newIzq, NotificationChain msgs)
  {
    Expresion oldIzq = izq;
    izq = newIzq;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ, oldIzq, newIzq);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIzq(Expresion newIzq)
  {
    if (newIzq != izq)
    {
      NotificationChain msgs = null;
      if (izq != null)
        msgs = ((InternalEObject)izq).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ, null, msgs);
      if (newIzq != null)
        msgs = ((InternalEObject)newIzq).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ, null, msgs);
      msgs = basicSetIzq(newIzq, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ, newIzq, newIzq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getY()
  {
    return y;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setY(String newY)
  {
    String oldY = y;
    y = newY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__Y, oldY, y));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expresion getDer()
  {
    return der;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDer(Expresion newDer, NotificationChain msgs)
  {
    Expresion oldDer = der;
    der = newDer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER, oldDer, newDer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDer(Expresion newDer)
  {
    if (newDer != der)
    {
      NotificationChain msgs = null;
      if (der != null)
        msgs = ((InternalEObject)der).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER, null, msgs);
      if (newDer != null)
        msgs = ((InternalEObject)newDer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER, null, msgs);
      msgs = basicSetDer(newDer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER, newDer, newDer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ:
        return basicSetIzq(null, msgs);
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER:
        return basicSetDer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__X:
        return getX();
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ:
        return getIzq();
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__Y:
        return getY();
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER:
        return getDer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__X:
        setX((String)newValue);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ:
        setIzq((Expresion)newValue);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__Y:
        setY((String)newValue);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER:
        setDer((Expresion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__X:
        setX(X_EDEFAULT);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ:
        setIzq((Expresion)null);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__Y:
        setY(Y_EDEFAULT);
        return;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER:
        setDer((Expresion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__X:
        return X_EDEFAULT == null ? x != null : !X_EDEFAULT.equals(x);
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__IZQ:
        return izq != null;
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__Y:
        return Y_EDEFAULT == null ? y != null : !Y_EDEFAULT.equals(y);
      case PolePackage.OPERACIONES_BOOLEANAS_DE_COMPARACION__DER:
        return der != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (x: ");
    result.append(x);
    result.append(", y: ");
    result.append(y);
    result.append(')');
    return result.toString();
  }

} //OperacionesBooleanasDeComparacionImpl
