/**
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.pole.impl;

import edu.upb.lp.isc.pole.Expresion;
import edu.upb.lp.isc.pole.ExpresionStringVacio;
import edu.upb.lp.isc.pole.PolePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expresion String Vacio</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.pole.impl.ExpresionStringVacioImpl#getLlamado <em>Llamado</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExpresionStringVacioImpl extends ExpresionOperacionesBooleanasImpl implements ExpresionStringVacio
{
  /**
   * The cached value of the '{@link #getLlamado() <em>Llamado</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLlamado()
   * @generated
   * @ordered
   */
  protected Expresion llamado;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpresionStringVacioImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PolePackage.Literals.EXPRESION_STRING_VACIO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expresion getLlamado()
  {
    return llamado;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLlamado(Expresion newLlamado, NotificationChain msgs)
  {
    Expresion oldLlamado = llamado;
    llamado = newLlamado;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PolePackage.EXPRESION_STRING_VACIO__LLAMADO, oldLlamado, newLlamado);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLlamado(Expresion newLlamado)
  {
    if (newLlamado != llamado)
    {
      NotificationChain msgs = null;
      if (llamado != null)
        msgs = ((InternalEObject)llamado).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PolePackage.EXPRESION_STRING_VACIO__LLAMADO, null, msgs);
      if (newLlamado != null)
        msgs = ((InternalEObject)newLlamado).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PolePackage.EXPRESION_STRING_VACIO__LLAMADO, null, msgs);
      msgs = basicSetLlamado(newLlamado, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PolePackage.EXPRESION_STRING_VACIO__LLAMADO, newLlamado, newLlamado));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PolePackage.EXPRESION_STRING_VACIO__LLAMADO:
        return basicSetLlamado(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PolePackage.EXPRESION_STRING_VACIO__LLAMADO:
        return getLlamado();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PolePackage.EXPRESION_STRING_VACIO__LLAMADO:
        setLlamado((Expresion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PolePackage.EXPRESION_STRING_VACIO__LLAMADO:
        setLlamado((Expresion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PolePackage.EXPRESION_STRING_VACIO__LLAMADO:
        return llamado != null;
    }
    return super.eIsSet(featureID);
  }

} //ExpresionStringVacioImpl
